<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Wisdom's blog]]></title>
  <subtitle><![CDATA[Encode my life]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.xuerlove.com/"/>
  <updated>2016-04-14T02:43:35.000Z</updated>
  <id>http://blog.xuerlove.com/</id>
  
  <author>
    <name><![CDATA[Wisdom]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[touch开发性能优化]]></title>
    <link href="http://blog.xuerlove.com/2016/04/14/touch%E5%BC%80%E5%8F%91%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://blog.xuerlove.com/2016/04/14/touch开发性能优化/</id>
    <published>2016-04-14T02:43:35.000Z</published>
    <updated>2016-04-14T02:43:35.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[reactjs应用]]></title>
    <link href="http://blog.xuerlove.com/2016/04/14/reactjs%E5%BA%94%E7%94%A8/"/>
    <id>http://blog.xuerlove.com/2016/04/14/reactjs应用/</id>
    <published>2016-04-14T02:42:32.000Z</published>
    <updated>2016-04-14T02:48:11.000Z</updated>
    <content type="html"><![CDATA[<h4 id="reactjs">reactjs</h4><p>官方文档 <a href="http://reactjs.cn/react/docs/getting-started.html" target="_blank" rel="external">http://reactjs.cn/react/docs/getting-started.html</a></p>
<h5 id="引用reactjs框架">引用reactjs框架</h5><ul>
<li>实时转换工具 <code>npm install -g react-tools</code> 启动命令 <code>jsx --watch src/ build/</code> （或者页面引入jsx编译工具）</li>
<li>引入fetch <a href="https://github.com/github/fetch" target="_blank" rel="external">https://github.com/github/fetch</a> （引入Promise）</li>
<li><p>jsx <a href="http://reactjs.cn/react/docs/jsx-in-depth.html" target="_blank" rel="external">http://reactjs.cn/react/docs/jsx-in-depth.html</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##### &#36807;&#31243;&#10;* &#36890;&#36807; React.createClass &#23450;&#20041;&#32452;&#20214;&#10;* &#32452;&#20214;&#21253;&#21547;&#30340;&#23646;&#24615;&#65292;&#26041;&#27861;(http://reactjs.cn/react/docs/component-specs.html)&#10;&#9;* render&#10;&#9;* getInitialState&#10;&#9;* getDefaultProps&#10;&#9;* propTypes&#10;&#9;* mixins&#10;&#9;* statics&#10;&#9;* displayName&#10;* &#29983;&#21629;&#21608;&#26399;&#26041;&#27861;(http://reactjs.cn/react/docs/component-specs.html)&#10;&#9;* componentWillMount&#10;&#9;* componentDidMount&#10;&#9;* componentWillReceiveProps&#10;&#9;* shouldComponentUpdate&#10;&#9;* componentWillUpdate&#10;&#9;* componentDidUpdate&#10;&#9;* componentWillUnmount&#10;* &#32452;&#20214;&#29983;&#21629;&#21608;&#26399;&#10;&#62;&#20102;&#35299;&#32452;&#20214;&#30340;&#29983;&#21629;&#21608;&#26399;&#24456;&#37325;&#35201;&#65292;&#36825;&#22312;&#25105;&#20204;&#21738;&#20010;&#38454;&#27573;&#21435;&#35843;&#29992;&#20160;&#20040;&#26041;&#27861;&#26159;&#26377;&#24110;&#21161;&#30340;&#65292;&#19979;&#38754;&#23601;&#19968;&#36215;&#26469;&#30475;&#19968;&#19979;&#65306;&#10;&#10;1. getInitialState&#10;&#9;* &#22312;&#32452;&#20214;&#31867;&#21019;&#24314;&#30340;&#26102;&#20505;&#21482;&#35843;&#29992;&#19968;&#27425;&#65292;&#36820;&#22238;&#20540;&#26159; this.state &#30340;&#21021;&#22987;&#20540;&#10;2. componentWillMount&#10;&#9;* &#21021;&#22987;&#21270;&#28210;&#26579;&#20043;&#21069;&#21482;&#35843;&#29992;&#19968;&#27425;&#65292;&#22914;&#26524;&#22312;&#36825;&#20010;&#38454;&#27573;setState&#65292;&#26356;&#26032;&#23558;&#20250;&#36890;&#30693;render&#10;3. render&#10;&#9;* &#20250;&#26681;&#25454;this.props&#25110;&#32773;this.state&#28210;&#26579;&#32452;&#20214;&#10;4. componentDidMount&#10;&#9;* &#22312;&#21021;&#22987;&#21270;&#28210;&#26579;&#20043;&#21518;&#21482;&#35843;&#29992;&#19968;&#27425;&#65292;&#21487;&#20197;&#25805;&#20316;dom&#21644;&#27983;&#35272;&#22120;&#20132;&#20114;&#65292;&#36890;&#36807;this.DOMNode()&#33719;&#21462;DOM&#33410;&#28857;&#10;5. componentWillReceiveProps&#10;&#9;* &#32452;&#20214;&#25509;&#25910;&#21040;&#26032;&#30340;props&#37117;&#20250;&#35843;&#29992;&#65292;&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#19981;&#20250;&#35843;&#29992;&#36825;&#20010;&#26041;&#27861;&#65292;&#21487;&#20197;&#22312;&#36825;&#37324;&#38754;&#26356;&#26032;this.state&#10;6. componentWillUpdate&#10;&#9;* &#22312;&#25509;&#25910;&#21040;&#26032;&#30340;props&#25110;&#32773;state&#20043;&#21069;&#30340;&#26102;&#20505;&#35843;&#29992;&#65292;&#21021;&#22987;&#21270;&#28210;&#26579;&#30340;&#26102;&#20505;&#19981;&#20250;&#35843;&#29992;&#65292;&#37324;&#38754;&#20570;&#26356;&#26032;&#21069;&#30340;&#20934;&#22791;&#24037;&#20316;&#65292;&#19981;&#33021;&#22312;&#37324;&#38754;setState&#10;7. shouldComponentUpdate&#10;&#9;* &#22312;&#25509;&#25910;&#21040;&#26032;&#30340;props&#25110;&#32773;state&#30340;&#26102;&#20505;&#65292;&#28210;&#26579;&#20043;&#21069;&#35843;&#29992;&#65292;&#22312;&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#19981;&#20250;&#35843;&#29992;&#65292;&#22914;&#26524;&#30830;&#23450;&#26032;&#30340;props&#21644;state&#19981;&#20250;&#23548;&#33268;&#32452;&#20214;&#26356;&#26032;&#65292;&#21487;&#20197;&#36820;&#22238;false,&#40664;&#35748;&#36820;&#22238;true&#10;&#9;```javascript&#10;&#9;shouldComponentUpdate: function(nextProps, nextState) &#123;&#10;&#9;  return nextProps.id !== this.props.id;&#10;&#9;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>这个方法可以提升程序性能，一些依赖父级props，组件本身会发送请求的情况，可以判断传入props是否是更新后的，然后再去执行接下来的动作。</li>
</ul>
</li>
</ul>
<ol>
<li>componentDidUpdate<ul>
<li>组件更新到DOM中被调用，初始化的时候不会调用，对dom的操作可以放在这里面执行</li>
</ul>
</li>
<li>componentWillUnmount<ul>
<li>组件从dom中移除的时候调用，这个方法中清除一些定时操作等</li>
</ul>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="reactjs">reactjs</h4><p>官方文档 <a href="http://reactjs.cn/react/docs/getting-started.html" target="_blank" rel="external">http://react]]>
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs开发控制台工具]]></title>
    <link href="http://blog.xuerlove.com/2016/04/14/nodejs%E5%BC%80%E5%8F%91%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%B7%A5%E5%85%B7/"/>
    <id>http://blog.xuerlove.com/2016/04/14/nodejs开发控制台工具/</id>
    <published>2016-04-14T02:41:56.000Z</published>
    <updated>2016-04-14T03:11:25.000Z</updated>
    <content type="html"><![CDATA[<h4 id="环境要求">环境要求</h4><ul>
<li>nodejs</li>
</ul>
<h4 id="基本文件结构">基本文件结构</h4><ul>
<li>package.json <ul>
<li>使用npm init生成</li>
<li>安装依赖模块使用 npm install 模块名</li>
</ul>
</li>
<li>一个主文件 index.js</li>
</ul>
<h4 id="例子：">例子：</h4><ul>
<li><p>package.json</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"node-translate"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">"translate"</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"bin"</span>: &#123;</span><br><span class="line">    <span class="string">"trans"</span>: <span class="string">"./index.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"author"</span>: <span class="string">"wisdom"</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"color"</span>: <span class="string">"^0.11.1"</span>,</span><br><span class="line">    <span class="string">"colors"</span>: <span class="string">"^1.1.2"</span>,</span><br><span class="line">    <span class="string">"commander"</span>: <span class="string">"^2.9.0"</span>,</span><br><span class="line">    <span class="string">"request"</span>: <span class="string">"^2.70.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>index.js</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#! /usr/bin/env node</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * @Author: wisdom</span><br><span class="line"> * @Date:   2016-04-07 15:47:33</span><br><span class="line"> * @Last Modified by:   wisdom</span><br><span class="line"> * @Last Modified time: 2016-04-07 17:56:40</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">'use strict';</span><br><span class="line"></span><br><span class="line">var request = require('request');</span><br><span class="line">var colors = require('colors');</span><br><span class="line"></span><br><span class="line">var program = require('commander');</span><br><span class="line">program.version('0.0.1').parse(process.argv);</span><br><span class="line"></span><br><span class="line">(function() &#123;</span><br><span class="line"></span><br><span class="line">	var param = process.argv[2];</span><br><span class="line"></span><br><span class="line">	var word = param ? param : '';</span><br><span class="line"></span><br><span class="line">	if (!word) &#123;</span><br><span class="line">		console.log('请输入要查询的单词'.underline.red);</span><br><span class="line">		return false;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	console.log('');</span><br><span class="line">	console.log('要翻译的单词 : '.green + ' : ' + word.underline.red);</span><br><span class="line">	console.log('');</span><br><span class="line"></span><br><span class="line">	var option = &#123;</span><br><span class="line">		from: 'zh',</span><br><span class="line">		to: 'en',</span><br><span class="line">		query: encodeURIComponent(word)</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	if (/^[A-Za-z ]+$/.test(word.trim())) &#123;</span><br><span class="line">		option.from = 'en';</span><br><span class="line">		option.to = 'zh';</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	var url = 'http://test.com'; // 这里换成了假url</span><br><span class="line"></span><br><span class="line">	var paramArray = [];</span><br><span class="line">	for (var item in option) &#123;</span><br><span class="line">		var pStr = item + '=' + option[item];</span><br><span class="line">		paramArray.push(pStr);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	url += '?' + paramArray.join('&amp;');</span><br><span class="line"></span><br><span class="line">	request(url, function(error, response, data) &#123;</span><br><span class="line">		if (!error &amp;&amp; response.statusCode == 200) &#123;</span><br><span class="line">			data = JSON.parse(data);</span><br><span class="line">			if (data &amp;&amp; data.result) &#123;</span><br><span class="line">				console.log('翻译结果 : '.green + data.result.dst.underline.red || '没有查询到结果'.underline.red);</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				console.log('没有查询到结果'.underline.red);</span><br><span class="line">			&#125;</span><br><span class="line">			console.log('');</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="链接到全局">链接到全局</h4><p>npm link</p>
<h4 id="自行发布">自行发布</h4><h4 id="request">request</h4><p>request模块让http请求变的简单,<a href="https://www.npmjs.com/package/request" target="_blank" rel="external">https://www.npmjs.com/package/request</a></p>
<h4 id="colors">colors</h4><p>终端着色colors插件,<a href="https://www.npmjs.com/package/colors" target="_blank" rel="external">https://www.npmjs.com/package/colors</a></p>
<h4 id="program">program</h4><p>nodejs命令行参数处理模块commander,<a href="https://www.npmjs.com/package/commander" target="_blank" rel="external">https://www.npmjs.com/package/commander</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="环境要求">环境要求</h4><ul>
<li>nodejs</li>
</ul>
<h4 id="基本文件结构">基本文件结构</h4><ul>
<li>package.json <ul>
<li>使用npm init生成</li>
<li>安装依赖模块使用 n]]>
    </summary>
    
      <category term="nodejs" scheme="http://blog.xuerlove.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[npm包开发]]></title>
    <link href="http://blog.xuerlove.com/2016/04/14/npm%E5%8C%85%E5%BC%80%E5%8F%91/"/>
    <id>http://blog.xuerlove.com/2016/04/14/npm包开发/</id>
    <published>2016-04-14T02:41:29.000Z</published>
    <updated>2016-04-14T02:41:29.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[移动端布局]]></title>
    <link href="http://blog.xuerlove.com/2016/04/14/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B8%83%E5%B1%80/"/>
    <id>http://blog.xuerlove.com/2016/04/14/移动端布局/</id>
    <published>2016-04-14T02:39:45.000Z</published>
    <updated>2016-04-14T02:40:23.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>黏性布局 POSITION:STICKY（通过判断支持该属性的浏览器使用该布局） – <a href="http://hao.jser.com/archive/7970/" target="_blank" rel="external">http://hao.jser.com/archive/7970/</a></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.sticky &#123;</span><br><span class="line">    position: -webkit-sticky;</span><br><span class="line">    position: sticky;</span><br><span class="line">    top: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">.fixed &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Web移动端Fixed布局的解决方案  – <a href="http://efe.baidu.com/blog/mobile-fixed-layout/" target="_blank" rel="external">http://efe.baidu.com/blog/mobile-fixed-layout/</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li><p>黏性布局 POSITION:STICKY（通过判断支持该属性的浏览器使用该布局） – <a href="http://hao.jser.com/archive/7970/" target="_blank" rel="external">http://hao]]>
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[动态脚本]]></title>
    <link href="http://blog.xuerlove.com/2015/11/25/%E5%8A%A8%E6%80%81%E8%84%9A%E6%9C%AC/"/>
    <id>http://blog.xuerlove.com/2015/11/25/动态脚本/</id>
    <published>2015-11-25T07:03:01.000Z</published>
    <updated>2016-04-14T02:12:35.000Z</updated>
    <content type="html"><![CDATA[<h4 id="动态加载js">动态加载js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadScript</span>(<span class="params">data,type</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">	script.type = <span class="string">"text/javascript"</span>;</span><br><span class="line">	<span class="keyword">try</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</span><br><span class="line">			script.appendChild(<span class="built_in">document</span>.createTextNode(data));</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			script.src = data;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="keyword">catch</span>(ex)&#123;</span><br><span class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</span><br><span class="line">			script.text = code</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			script.src = data;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">document</span>.body.appendChild(script);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="动态样式">动态样式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadStyle</span>(<span class="params">data,type</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> style = <span class="built_in">document</span>.createElement(<span class="string">"style"</span>);</span><br><span class="line">	style.type = <span class="string">"text/css"</span>;</span><br><span class="line">	<span class="keyword">try</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</span><br><span class="line">			style.appendChild(<span class="built_in">document</span>.createTextNode(data));</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			style.href = data;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="keyword">catch</span>(ex)&#123;</span><br><span class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</span><br><span class="line">			style.styleSheet.cssText = css;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			style.href = data;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> head = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>];</span><br><span class="line">	head.appendChild(style);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h4 id="动态加载js">动态加载js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadScript</span>(<span class="params">data,type</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">	script.type = <span class="string">"text/javascript"</span>;</span><br><span class="line">	<span class="keyword">try</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</span><br><span class="line">			script.appendChild(<span class="built_in">document</span>.createTextNode(data));</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			script.src = data;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="keyword">catch</span>(ex)&#123;</span><br><span class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</span><br><span class="line">			script.text = code</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			script.src = data;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">document</span>.body.appendChild(script);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://blog.xuerlove.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[DOM操作]]></title>
    <link href="http://blog.xuerlove.com/2015/11/24/DOM%E6%93%8D%E4%BD%9C/"/>
    <id>http://blog.xuerlove.com/2015/11/24/DOM操作/</id>
    <published>2015-11-24T07:03:01.000Z</published>
    <updated>2016-04-14T02:14:38.000Z</updated>
    <content type="html"><![CDATA[<h4 id="Node">Node</h4><h5 id="操作节点">操作节点</h5><ul>
<li>appendChild()<br>一个参数，要插入的节点</li>
<li>insertBefore()<br>两个参数，要插入的节点和参照的节点</li>
<li>replaceChild()<br>两个参数，要插入的节点和要替换的节点</li>
<li>removeChild()<br>一个参数，要移除的节点</li>
<li>cloneNode()<br>一个参数，布尔值，是否执行深度克隆</li>
<li>normalize()<br>合并文本节点<a id="more"></a>
<h4 id="Document">Document</h4><h5 id="document-getElementById">document.getElementById</h5></li>
<li>IE7及以前的版本忽略大小写，除此之外必须严格按照大小写</li>
<li>如果不传参数返回null</li>
<li>IE7及以前的版本如果表单元素name属性和某元素id相等，会返回表单元素<h5 id="document-getElementsByTagName">document.getElementsByTagName</h5></li>
<li>返回标签元素的集合<h5 id="namedItem_返回标签集合中指定name元素">namedItem 返回标签集合中指定name元素</h5></li>
<li>使用中括号的方式能达到namedItem效果</li>
<li>获取所有html元素，传入<code>*</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> images = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'image'</span>);</span><br><span class="line"><span class="keyword">var</span> logo = images.namedItem(<span class="string">'logo'</span>);</span><br><span class="line"><span class="keyword">var</span> author = images[<span class="string">'author'</span>];</span><br><span class="line"><span class="built_in">document</span>.getElementsByName</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>与 document.getElementsByTagName 类似</p>
<h5 id="特殊方法">特殊方法</h5><ul>
<li>document.anchors返回所有带name的a元素</li>
<li>document.forms返回所有form元素</li>
<li>document.images返回所有img元素</li>
<li>document.links返回所有带href的元素<h5 id="元素属性">元素属性</h5></li>
<li>id 元素唯一标示</li>
<li>title 附加说明</li>
<li>className 元素css类</li>
<li>lang 元素内容语言代码</li>
<li>dir 语言方向</li>
</ul>
<h5 id="元素方法">元素方法</h5><ul>
<li>getAttribute<br>不能获取style属性，以及类似onclick这样的事件处理属性</li>
<li>setAttribute<br>设置属性值，接收两个参数，第一个是属性名，第二个是属性值</li>
<li>removeAttribute<br>彻底删除属性</li>
<li>attributes属性<br>Element类型拥有attributes属性</li>
</ul>
<h5 id="方法">方法</h5><ul>
<li><p>getNamedItem(name) 返回指定属性值 (可以使用方括号访问方式)</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> id = elements.attributes.getNamedItem(<span class="string">'id'</span>).nodeValue;</span><br><span class="line"><span class="keyword">var</span> id = elements.attributes[<span class="string">'id'</span>].nodeValue;</span><br></pre></td></tr></table></figure>
</li>
<li><p>removeNamedItem(name) 移除指定属性</p>
</li>
<li>setNamedItem(node) 添加属性</li>
<li><p>item(pos) 返回位于pos位置的节点</p>
</li>
<li><p>遍历所有属性的时候可以使用这些方法</p>
</li>
<li>attributes属性,不同浏览器返回顺序不一致</li>
<li>IE7及以前的版本会返回所有可能的属性，为避免这个，需要使用specified检测，未设置过的特性为false</li>
</ul>
<h5 id="创建元素">创建元素</h5><ul>
<li><p>document.createElement()<br>接收一个参数，创建的标签</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">div.id=<span class="string">"top"</span>;</span><br><span class="line">div.className = <span class="string">"m-top"</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>IE中支持参数传入完整的标签内容，有助于避免IE7以及以前版本的一些bug</li>
<li>不能动态设置iframe name属性</li>
<li>创建name相同的radio，互无联系</li>
<li>但是，这样方式又只有IE才支持，所以，使用时需要做检测执行<h5 id="Text文本节点">Text文本节点</h5>创建文本节点document.createTextNode()<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ele = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line"><span class="keyword">var</span> txt = <span class="built_in">document</span>.createTextNode(<span class="string">'hello'</span>);</span><br><span class="line">ele.appendChild(txt);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(ele);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h5 id="规范化文本节点">规范化文本节点</h5><ul>
<li>使用normalize()方法合并文本节点</li>
</ul>
<h5 id="分割文本节点">分割文本节点</h5><ul>
<li>splitText(pos)方法，pos是指定位置<h5 id="其它方法">其它方法</h5></li>
<li>appendData(text)</li>
<li>deleteData(offset,count)</li>
<li>insertData(offset,text)</li>
<li>replaceData(offset,count,text)</li>
<li>substringData(offset,data)</li>
</ul>
<h5 id="DocumentFragment">DocumentFragment</h5><ul>
<li>文档片段，创建方法<br>  document.createDocumentFragment()</li>
<li>操作复杂dom的时候，可以使用片段操作，这样会避免页面多次页面重新渲染</li>
</ul>
<h5 id="Attr属性">Attr属性</h5><ul>
<li>创建属性<br>document.createAttribute()<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> attr = <span class="built_in">document</span>.createAttribute(<span class="string">'align'</span>);</span><br><span class="line">attr.value = <span class="string">'left'</span>;</span><br><span class="line">ele.setAttribute(attr);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="selector_API">selector API</h5><ol>
<li>querySelector()<ul>
<li>接收css选择符，返回匹配到的第一个元素</li>
<li>document.querySelector()</li>
<li>document.body.querySelector()</li>
</ul>
</li>
<li>querySelectorAll()<ul>
<li>返回NodeList,使用与querySelector()相同</li>
</ul>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="Node">Node</h4><h5 id="操作节点">操作节点</h5><ul>
<li>appendChild()<br>一个参数，要插入的节点</li>
<li>insertBefore()<br>两个参数，要插入的节点和参照的节点</li>
<li>replaceChild()<br>两个参数，要插入的节点和要替换的节点</li>
<li>removeChild()<br>一个参数，要移除的节点</li>
<li>cloneNode()<br>一个参数，布尔值，是否执行深度克隆</li>
<li>normalize()<br>合并文本节点]]>
    
    </summary>
    
      <category term="javascript" scheme="http://blog.xuerlove.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[shell基础]]></title>
    <link href="http://blog.xuerlove.com/2015/11/23/shell%E5%9F%BA%E7%A1%80/"/>
    <id>http://blog.xuerlove.com/2015/11/23/shell基础/</id>
    <published>2015-11-23T07:03:01.000Z</published>
    <updated>2016-04-14T02:17:26.000Z</updated>
    <content type="html"><![CDATA[<h4 id="shell分类">shell分类</h4><ul>
<li>Bourne Shell（/usr/bin/sh或/bin/sh）</li>
<li>Bourne Again Shell（/bin/bash）</li>
<li>C Shell（/usr/bin/csh）</li>
<li>K Shell（/usr/bin/ksh）</li>
<li>Shell for Root（/sbin/sh）</li>
<li>eg.<a id="more"></a>
<h5 id="#!"><code>#!</code></h5><blockquote>
<p><code>#!</code>告诉系统其后路径所指定的程序即是解释此脚本文件的Shell程序。</p>
</blockquote>
</li>
<li>执行<ul>
<li><code>./test.sh</code>使用想对路径</li>
<li>sh test.sh</li>
</ul>
</li>
<li><p>变量</p>
<ul>
<li>直接使用变量名 <code>test=&quot;123&quot;</code></li>
</ul>
</li>
<li><p>变量名和等号之间不能有空格</p>
</li>
<li>首个字符必须为字母（a-z，A-Z）。</li>
<li>中间不能有空格，可以使用下划线（_）。</li>
<li>不能使用标点符号。</li>
<li>不能使用bash里的关键字（可用help命令查看保留关键字）。</li>
</ul>
<h5 id="使用语句给变量赋值">使用语句给变量赋值</h5><ul>
<li>for file inls /etc``</li>
</ul>
<h5 id="使用变量">使用变量</h5><blockquote>
<p>在变量名前添加美元符号 <code>$</code><br><code>$test</code>或者<code>${test}</code></p>
</blockquote>
<h5 id="字符串">字符串</h5><ul>
<li>单引号<ul>
<li>不能使用变量</li>
<li>不能出现单引号，不能使用转译字符</li>
</ul>
</li>
<li>双引号<ul>
<li>可以使用变量</li>
<li>可以使用转译字符</li>
</ul>
</li>
</ul>
<h5 id="拼接字符串">拼接字符串</h5><ul>
<li>不需要使用 <code>+</code> 符号<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"zhuo"</span></span><br><span class="line">say=<span class="string">"hi "</span>$name<span class="string">" !"</span></span><br><span class="line">says = <span class="string">"hi $&#123;name&#125; !"</span></span><br><span class="line">echo say says</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="字符串长度">字符串长度</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string="tetetete"</span><br><span class="line">echo $&#123;#string&#125;</span><br></pre></td></tr></table></figure>
<h5 id="截取字符串">截取字符串</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">"tetetete"</span></span><br><span class="line">echo $&#123;string:<span class="number">2</span>:<span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure>
<h5 id="查找字符串">查找字符串</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">"asdfsdf werfvsd"</span></span><br><span class="line">echo <span class="string">`expr index "$string" is`</span></span><br></pre></td></tr></table></figure>
<h5 id="数组">数组</h5><p>创建数组以及访问数组<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">arr=(1,2,3,4,5)</span><br><span class="line">#或者</span><br><span class="line">arr[0]=1</span><br><span class="line">arr[1]=2</span><br><span class="line">arr[2]=3</span><br><span class="line">#访问</span><br><span class="line">echo $&#123;arr[0]&#125;</span><br><span class="line">#访问所有元素</span><br><span class="line">echo $&#123;arr[@]&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="数组长度">数组长度</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len=$&#123;#arr[@]&#125;</span><br></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len=$&#123;$arr[*]&#125;</span><br></pre></td></tr></table></figure></p>
<p>数组单个元素长度<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len=$&#123;$arr[n]&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="注释">注释</h5><ul>
<li>不支持多行注释，单行注释使用#</li>
<li>开发过程中，为方便注释，可以把需要注释的代码放在一个函数中<h5 id="echo">echo</h5>输出字符串<br>echo string<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#34;test&#34;&#10;echo test&#10;echo &#34;\&#34;test\&#34;&#34;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="read">read</h5><p>输入字符<br>read name<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">read name</span><br><span class="line">echo "$&#123;name&#125;"</span><br></pre></td></tr></table></figure></p>
<h5 id="显示">显示</h5><p><code>-e</code>开启转义<br>换行<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo -e "test!\n" # \n换行</span><br><span class="line">echo "ok"</span><br></pre></td></tr></table></figure></p>
<h5 id="不换行">不换行</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo -e "test!\c" # \c不换行</span><br><span class="line">echo "ok"</span><br></pre></td></tr></table></figure>
<h5 id="输出到文件">输出到文件</h5><p><code>echo &quot;test&quot; &gt; test.txt</code></p>
<h5 id="原格式输出">原格式输出</h5><p>使用单引号，不进行转义</p>
<h5 id="显示执行结果">显示执行结果</h5><p><code>echo</code>data``</p>
<h5 id="test命令">test命令</h5><p>检测某个条件是否成立</p>
<pre><code>* 数值测试
<span class="comment"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-eq	等于则为真</span><br><span class="line">-ne	不等于则为真</span><br><span class="line">-gt	大于则为真</span><br><span class="line">-ge	大于等于则为真</span><br><span class="line">-lt	小于则为真</span><br><span class="line">-le	小于等于则为真</span><br></pre></td></tr></table></figure></span>

<span class="comment"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x=read</span><br><span class="line">y=read</span><br><span class="line"><span class="keyword">if</span> test $[x] -eq $[y]</span><br><span class="line">then</span><br><span class="line">	echo <span class="string">"ok"</span></span><br><span class="line">elif test $x -gt $y</span><br><span class="line">	echo <span class="string">"gt"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	echo <span class="string">"bad"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure></span>

* 字符串测试
<span class="comment"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">=	等于则为真</span><br><span class="line">!=	不相等则为真</span><br><span class="line">-z 字符串	字符串长度伪则为真</span><br><span class="line">-n 字符串	字符串长度不伪则为真</span><br></pre></td></tr></table></figure></span>

<span class="comment"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x=read</span><br><span class="line">y=read</span><br><span class="line"><span class="keyword">if</span> test $x -eq $y</span><br><span class="line">then</span><br><span class="line">	echo <span class="string">"ok"</span></span><br><span class="line">elif test $x -gt $y</span><br><span class="line">	echo <span class="string">"gt"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	echo <span class="string">"bad"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure></span>
</code></pre><h5 id="文件测试">文件测试</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-e 文件名	如果文件存在则为真</span><br><span class="line">-r 文件名	如果文件存在且可读则为真</span><br><span class="line">-w 文件名	如果文件存在且可写则为真</span><br><span class="line">-x 文件名	如果文件存在且可执行则为真</span><br><span class="line">-s 文件名	如果文件存在且至少有一个字符则为真</span><br><span class="line">-d 文件名	如果文件存在且为目录则为真</span><br><span class="line">-f 文件名	如果文件存在且为普通文件则为真</span><br><span class="line">-c 文件名	如果文件存在且为字符型特殊文件则为真</span><br><span class="line">-b 文件名	如果文件存在且为块特殊文件则为真</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> test -e ./blog</span><br><span class="line">then </span><br><span class="line">	echo <span class="string">'file exists'</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	echo <span class="string">'file does not exists'</span></span><br><span class="line">fi</span><br><span class="line"><span class="string">``</span><span class="string">`javascript</span><br><span class="line">`</span>Shell还提供了 与( -a )、或( -o )、非( ! ) 三个逻辑操作符用于将测试条件连接起来，优先级：”!” “-a” “-o”<span class="string">`</span><br><span class="line">##### 流程控制</span><br><span class="line">* if else</span><br><span class="line">`</span><span class="string">``</span>javascript</span><br><span class="line">x=read</span><br><span class="line">y=read</span><br><span class="line"><span class="keyword">if</span> test $x -eq $y</span><br><span class="line">then</span><br><span class="line">	echo <span class="string">"ok"</span></span><br><span class="line">elif test $x -gt $y</span><br><span class="line">	echo <span class="string">"gt"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	echo <span class="string">"bad"</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h5 id="for">for</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> it <span class="keyword">in</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	echo $it</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h5 id="while">while</h5><p>条件为真则执行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">count=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span>(($count&lt;<span class="number">10</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	echo $count</span><br><span class="line">	<span class="keyword">let</span> <span class="string">"count++"</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure></p>
<h5 id="until">until</h5><p>直到条件为真停止,用法与while相同<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">count=<span class="number">100</span></span><br><span class="line">until(($count&lt;=<span class="number">10</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	echo $count</span><br><span class="line">	<span class="keyword">let</span> <span class="string">"count--"</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure></p>
<h5 id="case">case</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'请输入1-3的数字:'</span></span><br><span class="line">read num</span><br><span class="line"><span class="keyword">case</span> $num <span class="keyword">in</span></span><br><span class="line">	<span class="number">1</span>) echo <span class="string">'你输入了1'</span></span><br><span class="line">	;;</span><br><span class="line">	<span class="number">2</span>) echo <span class="string">'你输入了2'</span></span><br><span class="line">	;;</span><br><span class="line">	<span class="number">3</span>) echo <span class="string">'你输入了3'</span></span><br><span class="line">	;;</span><br><span class="line">	*) echo <span class="string">'你没有输入1到3的数字'</span></span><br><span class="line">	;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<h5 id="break">break</h5><p>跳出所有循环</p>
<h5 id="continue">continue</h5><p>结束当前循环，继续执行下一次循环</p>
<h5 id="函数">函数</h5><ul>
<li>定义方式,不需要带参数</li>
<li>function fun()</li>
<li>fun()<ul>
<li>参数返回，使用return</li>
<li>函数调用，直接使用函数名，不需要加括号，带有参数直接在后面列出，用空格间隔</li>
<li>函数返回值在调用函数后，可以通过$?使用</li>
<li>函数中的参数，可以使用$n来表示，n&gt;10的时候，使用${n}</li>
<li>特殊参数<ul>
<li><code>$#</code> 传递到脚本的参数个数</li>
<li><code>$*</code> 以一个单字符串显示所有向脚本传递的参数</li>
<li><code>$$</code> 脚本运行的当前进程ID号</li>
<li><code>$!</code> 后台运行的最后一个进程的ID号</li>
<li><code>$@</code> 与$*相同，但是使用时加引号，并在引号中返回每个参数。</li>
<li><code>$-</code> 显示Shell使用的当前选项，与set命令功能相同。</li>
<li><code>$?</code> 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="shell分类">shell分类</h4><ul>
<li>Bourne Shell（/usr/bin/sh或/bin/sh）</li>
<li>Bourne Again Shell（/bin/bash）</li>
<li>C Shell（/usr/bin/csh）</li>
<li>K Shell（/usr/bin/ksh）</li>
<li>Shell for Root（/sbin/sh）</li>
<li>eg.]]>
    
    </summary>
    
      <category term="linux" scheme="http://blog.xuerlove.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用nproxy实现本地代理]]></title>
    <link href="http://blog.xuerlove.com/2015/11/22/%E4%BD%BF%E7%94%A8nproxy%E5%AE%9E%E7%8E%B0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86/"/>
    <id>http://blog.xuerlove.com/2015/11/22/使用nproxy实现本地代理/</id>
    <published>2015-11-22T07:03:01.000Z</published>
    <updated>2016-04-14T02:12:26.000Z</updated>
    <content type="html"><![CDATA[<h4 id="安装">安装</h4><h5 id="先安装Node-js">先安装Node.js</h5><h5 id="安装nproxy">安装nproxy</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g nproxy</span><br></pre></td></tr></table></figure>
<h5 id="nproxy介绍">nproxy介绍</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">    -h, --help               output usage information</span><br><span class="line">    -V, --version            output the version number</span><br><span class="line">    -l, --list [list]        Specify the replace rule file</span><br><span class="line">    -p, --port [port]        Specify the port</span><br><span class="line">    -t, --timeout [timeout]  Specify the request timeout(<span class="number">5</span> seconds by <span class="keyword">default</span>)</span><br><span class="line">    -d, --debug              Enable debug mode</span><br><span class="line">    -n, --networks           Display network interface list</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="开启代理端口">开启代理端口</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nproxy -l replace_rule.js -p <span class="number">8188</span></span><br></pre></td></tr></table></figure>
<p>使用本地replace_rule.js转换规则，监听本地8188端口</p>
<h5 id="replace_rule-js">replace_rule.js</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = [</span><br><span class="line">    &#123;</span><br><span class="line">        pattern:<span class="string">'http://test.test.com/pro/(.*)'</span>,</span><br><span class="line">        responder:<span class="string">"http://127.0.0.1/pro/$1"</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<h5 id="浏览器怎么做">浏览器怎么做</h5><ul>
<li>安装代理插件，一大堆</li>
<li>配置代理 127.0.0.1 端口8188</li>
<li>可以设置自动转换规则，即：哪些网站使用这个代理</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="安装">安装</h4><h5 id="先安装Node-js">先安装Node.js</h5><h5 id="安装nproxy">安装nproxy</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g nproxy</span><br></pre></td></tr></table></figure>
<h5 id="nproxy介绍">nproxy介绍</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">    -h, --help               output usage information</span><br><span class="line">    -V, --version            output the version number</span><br><span class="line">    -l, --list [list]        Specify the replace rule file</span><br><span class="line">    -p, --port [port]        Specify the port</span><br><span class="line">    -t, --timeout [timeout]  Specify the request timeout(<span class="number">5</span> seconds by <span class="keyword">default</span>)</span><br><span class="line">    -d, --debug              Enable debug mode</span><br><span class="line">    -n, --networks           Display network interface list</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javascript面向对象相关]]></title>
    <link href="http://blog.xuerlove.com/2015/11/21/javascript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%85%B3/"/>
    <id>http://blog.xuerlove.com/2015/11/21/javascript面向对象相关/</id>
    <published>2015-11-21T07:03:01.000Z</published>
    <updated>2016-04-14T02:27:52.000Z</updated>
    <content type="html"><![CDATA[<h4 id="判断属性属于实力对象还是原型">判断属性属于实力对象还是原型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">name,obj</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> !(obj.hasOwnProperty) &amp;&amp; (name <span class="keyword">in</span> obj)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="for_in循环">for in循环</h4><blockquote>
<p>for in循环能够返回对象所有可枚举属性，无论实例中的，还是原型中的。即便是实例中重写了原型中不可枚举的属性，也会访问到。但是在IE8及以下存在bug,这样的属性不会被返回</p>
</blockquote>
<p>####继承<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">object</span>(<span class="params">o</span>)</span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line">	F.prototype = o;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> F();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inheritPrototype</span>(<span class="params">subType,superType</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> prototype = object(superType.prototype);</span><br><span class="line">	prototype.constructor = subType;</span><br><span class="line">	subType.prototype = prototype;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SuperType</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.name = name;</span><br><span class="line">	<span class="keyword">this</span>.color = [<span class="string">"red"</span>,<span class="string">"blue"</span>];</span><br><span class="line">&#125;</span><br><span class="line">SuperType.prototype.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	alert(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SubType</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">	SuperType.call(<span class="keyword">this</span>,name);</span><br><span class="line">	<span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">inheritPrototype(SubType,SuperType);</span><br><span class="line">SubType.prototype.sayAge = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	alert(<span class="keyword">this</span>.age);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>只调用了一次SuperType的构造函数，并且避免了在SubType.prototype上面创建不必要的属性，同时原型链还能保持不变。</p>
</blockquote>
<h4 id="单例模式">单例模式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> singleton = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> private = <span class="number">0</span>;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">privateFunc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &#123;</span><br><span class="line">		public:<span class="literal">true</span>,</span><br><span class="line">		publicFunc:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">			private++;</span><br><span class="line">			<span class="keyword">return</span> privateFunc();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h4 id="判断属性属于实力对象还是原型">判断属性属于实力对象还是原型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">name,obj</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> !(obj.hasOwnProperty) &amp;&amp; (name <span class="keyword">in</span> obj)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://blog.xuerlove.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nginx配置https]]></title>
    <link href="http://blog.xuerlove.com/2015/11/21/nginx%E9%85%8D%E7%BD%AEhttps/"/>
    <id>http://blog.xuerlove.com/2015/11/21/nginx配置https/</id>
    <published>2015-11-21T07:03:01.000Z</published>
    <updated>2016-04-14T02:15:58.000Z</updated>
    <content type="html"><![CDATA[<h4 id="安装">安装</h4><h5 id="系统：centos">系统：centos</h5><ul>
<li>wget下载</li>
<li>tar 解压</li>
<li>sudo ./configure —with-http_rewrite_module —with-pcre=../pcre-8.36 —with-* http_stub_status_module —with-http_ssl_module —with-http_realip_module 安装这些模块，如果安装失败，请wget下载缺失的包，解压安装后，再重新执行，等号后面添加模块路径</li>
<li>sudo make</li>
<li>sudo make install<a id="more"></a>
<h5 id="配置转发">配置转发</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">upstream  test&#123;</span><br><span class="line">     server **.**.**.**:****;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen **.**.**.**:<span class="number">8888</span>;</span><br><span class="line">        server_name test.test.com;</span><br><span class="line">        charset utf8;</span><br><span class="line">        gzip                    off;</span><br><span class="line">        gzip_http_version       <span class="number">1.1</span>;</span><br><span class="line">        gzip_buffers            <span class="number">256</span> <span class="number">64</span>k;</span><br><span class="line">        gzip_comp_level         <span class="number">5</span>;</span><br><span class="line">        gzip_min_length         <span class="number">1000</span>;</span><br><span class="line">        gzip_types              application/x-javascript text/javascript text/plain text/xml text/css image/jpeg image/jpg image/png image/gif application/x-shockwave-flash image/x-icon;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">         proxy_set_header  Host  $host;</span><br><span class="line">         proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class="line">         proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        location ~ <span class="regexp">/test/</span> &#123;</span><br><span class="line">                proxy_pass http:<span class="comment">//test;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="支持https">支持https</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">upstream  test&#123;</span><br><span class="line">     server **.**.**.**:****;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen **.**.**.**:<span class="number">443</span> ssl;</span><br><span class="line">        server_name test.test.com;</span><br><span class="line">        charset utf8;</span><br><span class="line">        gzip                    off;</span><br><span class="line">        gzip_http_version       <span class="number">1.1</span>;</span><br><span class="line">        gzip_buffers            <span class="number">256</span> <span class="number">64</span>k;</span><br><span class="line">        gzip_comp_level         <span class="number">5</span>;</span><br><span class="line">        gzip_min_length         <span class="number">1000</span>;</span><br><span class="line">        gzip_types              application/x-javascript text/javascript text/plain text/xml text/css image/jpeg image/jpg image/png image/gif application/x-shockwave-flash image/x-icon;</span><br><span class="line"></span><br><span class="line">        ssl on;</span><br><span class="line">        ssl_certificate             /home/q/nginx/conf/server.crt;</span><br><span class="line">        ssl_certificate_key         /home/q/nginx/conf/server.key;</span><br><span class="line">        ssl_session_timeout         <span class="number">5</span>m;</span><br><span class="line">        ssl_protocols               SSLv3 TLSv1;</span><br><span class="line">        ssl_ciphers                 ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</span><br><span class="line">        ssl_prefer_server_ciphers   on;</span><br><span class="line"></span><br><span class="line">         proxy_set_header  Host  $host;</span><br><span class="line">         proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class="line">         proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        location ~ <span class="regexp">/test/</span> &#123;</span><br><span class="line">                proxy_pass http:<span class="comment">//test;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="证书">证书</h5><ul>
<li><p>两种方式</p>
<ul>
<li><p>生成证书</p>
  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#cd /home/q/nginx/conf</span><br><span class="line">#openssl genrsa -des3 -out server.key 1024</span><br><span class="line">#openssl req -new -key server.key -out server.csr</span><br><span class="line">#openssl rsa -in server.key -out server_nopwd.key</span><br><span class="line">#openssl x509 -req -days 365 -in server.csr -signkey server_nopwd.key -out server.crt</span><br></pre></td></tr></table></figure>
<p>  中途需要输入密码，自己设定即可</p>
</li>
<li>copy<br>  直接copy别的机器上面已经存在的证书</li>
</ul>
</li>
</ul>
<h5 id="浏览器">浏览器</h5><ul>
<li>方法一：如果提示安全提示，点击高级》继续浏览</li>
<li>方法二：把生成的server.crt文件导入到系统的证书管理器就行了，具体方法：不介绍了</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="安装">安装</h4><h5 id="系统：centos">系统：centos</h5><ul>
<li>wget下载</li>
<li>tar 解压</li>
<li>sudo ./configure —with-http_rewrite_module —with-pcre=../pcre-8.36 —with-* http_stub_status_module —with-http_ssl_module —with-http_realip_module 安装这些模块，如果安装失败，请wget下载缺失的包，解压安装后，再重新执行，等号后面添加模块路径</li>
<li>sudo make</li>
<li>sudo make install]]>
    
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[表单中按回车键自动提交]]></title>
    <link href="http://blog.xuerlove.com/2015/11/20/%E8%A1%A8%E5%8D%95%E4%B8%AD%E6%8C%89%E5%9B%9E%E8%BD%A6%E9%94%AE%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4/"/>
    <id>http://blog.xuerlove.com/2015/11/20/表单中按回车键自动提交/</id>
    <published>2015-11-20T07:03:01.000Z</published>
    <updated>2016-04-14T02:26:40.000Z</updated>
    <content type="html"><![CDATA[<h4 id="当form表单中只有一个&lt;input_type=&quot;text&quot;_name=&#39;name&#39;_/&gt;时按回车键将会自动将表单提交。">当form表单中只有一个<code>&lt;input type=&quot;text&quot; name=&#39;name&#39; /&gt;</code>时按回车键将会自动将表单提交。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">'formSubmit'</span> action=<span class="string">'login.jsp'</span> method=<span class="string">'post'</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">'text'</span> <span class="attribute">name</span>=<span class="value">'name'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="不需要提交的解决方案">不需要提交的解决方案</h4><ul>
<li><p>添加一个</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">'text'</span> style=<span class="string">'display:none'</span>/&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>不显示输入框，然后回车之后也不会提交：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">'formSubmit'</span> action=<span class="string">'login.jsp'</span> method=<span class="string">'post'</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">'text'</span> <span class="attribute">name</span>=<span class="value">'name'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">style</span>=<span class="value">'display:none'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>添加一个onkeydown事件，然后回车之后也不会提交：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">'formSubmit'</span> action=<span class="string">'login.jsp'</span> method=<span class="string">'post'</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">'text'</span> <span class="attribute">name</span>=<span class="value">'name'</span> <span class="attribute">onkeydown</span>=<span class="value">'if(event.keyCode==13) return false;'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>如果想添加回车事件可以在onkeydown事件中添加判断提交表单：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">'formSubmit'</span> action=<span class="string">'login.jsp'</span> method=<span class="string">'post'</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">style</span>=<span class="value">'display:none'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">'text'</span> <span class="attribute">name</span>=<span class="value">'name'</span> <span class="attribute">onkeydown</span>=<span class="value">'if(event.keyCode==13)&#123;bindSubmit();&#125;'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>我们有时候希望回车键敲在文本框（input element）里来提交表单（form），但有时候又不希望如此。比如搜索行为，希望输入完关键词之后直接按回车键立即提交表单，<br>而有些复杂表单，可能要避免回车键误操作在未完成表单填写的时候就触发了表单提交。</p>
</blockquote>
<h4 id="要控制这些行为，不需要借助js，浏览器已经帮我们做了这些处理，这里总结几条规则：">要控制这些行为，不需要借助js，浏览器已经帮我们做了这些处理，这里总结几条规则：</h4><ul>
<li>如果表单里有一个type=”submit”的按钮，回车键生效。</li>
<li>如果表单里只有一个type=”text”的input，不管按钮是什么type，回车键生效。</li>
<li>如果按钮不是用input，而是用button，并且没有加type，IE下默认为type=button，FX默认为type=submit。</li>
<li>其他表单元素如textarea、select不影响，radio checkbox不影响触发规则，但本身在FX下会响应回车键，在IE下不响应。</li>
<li>type=”image”的input，效果等同于type=”submit”，不知道为什么会设计这样一种type，不推荐使用，应该用CSS添加背景图合适些。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="当form表单中只有一个&lt;input_type=&quot;text&quot;_name=&#39;name&#39;_/&gt;时按回车键将会自动将表单提交。">当form表单中只有一个<code>&lt;input type=&quot;text&quot; name=&#39;name&#39; /&gt;</code>时按回车键将会自动将表单提交。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">'formSubmit'</span> action=<span class="string">'login.jsp'</span> method=<span class="string">'post'</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">'text'</span> <span class="attribute">name</span>=<span class="value">'name'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端知识点集合]]></title>
    <link href="http://blog.xuerlove.com/2015/11/19/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E9%9B%86%E5%90%88/"/>
    <id>http://blog.xuerlove.com/2015/11/19/前端知识点集合/</id>
    <published>2015-11-19T07:03:01.000Z</published>
    <updated>2016-04-14T02:12:30.000Z</updated>
    <content type="html"><![CDATA[<h4 id="getBoundingClientRect">getBoundingClientRect</h4><blockquote>
<p>计算视口坐标,方法返回一个有left、right、top、bottom属性的对象，分别表示元素四个位置的相对于视口的坐标。getBoundingClientRect所返回的坐标包含元素的内边距和边框，不包含外边距。兼容性很好，非常好用.</p>
</blockquote>
<h4 id="scrollIntoView">scrollIntoView</h4><blockquote>
<p>可以让元素直接呈现到可视区域，实际上是屏幕显示区的最顶端<br><a id="more"></a></p>
<h4 id="检查图片是否加在完">检查图片是否加在完</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'img'</span>).load(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">'load over'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</blockquote>
<h4 id="修复加载失败的图片">修复加载失败的图片</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'img'</span>).on(<span class="string">'error'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	$(<span class="keyword">this</span>).prop(<span class="string">'src'</span>,<span class="string">'/default.png'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="回到顶部">回到顶部</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).animate(&#123;scrollTop:<span class="number">0</span>&#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>
<h4 id="图片预加载">图片预加载</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$.preLoad = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,len = <span class="built_in">arguments</span>.length;i&lt;len;i++)&#123;</span><br><span class="line">		<span class="keyword">var</span> $img = $(<span class="string">'&lt;img&gt;'</span>);</span><br><span class="line">		$img.attr(<span class="string">'src'</span>,<span class="built_in">arguments</span>[i]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> imgList = [<span class="string">'/img1.png'</span>,<span class="string">'/img2.png'</span>];</span><br><span class="line">$.preLoad(imgList);</span><br><span class="line"><span class="string">``</span><span class="string">`javascript</span><br><span class="line">#### visible</span><br><span class="line">`</span><span class="string">``</span>javascript</span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (e.target.visibilityState === <span class="string">'visible'</span>) &#123;</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">'visible'</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">'hidden'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>用来监听浏览器是否处于激活状态，可视状态</p>
<h4 id="ajax调用错误处理">ajax调用错误处理</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ajaxError(<span class="function"><span class="keyword">function</span>(<span class="params">e,xhr,settings,error</span>)</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="获取用户输入keyCode">获取用户输入keyCode</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"text"</span> onkeydown=<span class="string">"getCode(event);"</span> &gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Javascript 代码</span></span><br><span class="line"><span class="comment">//代码如下:</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCode</span>(<span class="params">evt</span>)</span>&#123;</span><br><span class="line">	<span class="comment">//兼容IE和Firefox获得keyBoardEvent对象</span></span><br><span class="line">	evt =  evt || <span class="built_in">window</span>.event;</span><br><span class="line">	<span class="comment">//兼容IE和Firefox获得keyBoardEvent对象的键值</span></span><br><span class="line">	<span class="keyword">var</span> key = evt.keyCode || evt.which;</span><br><span class="line">	<span class="comment">//显示按键键值</span></span><br><span class="line">	<span class="built_in">console</span>.info(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Date在IE8以下版本的问题">Date在IE8以下版本的问题</h4><p>使用 new Date(‘2015-10-10’),在ie8下会转成NaN,需要使用new Date(‘2015/10/10’)，我们可以自定义一个时间转换函数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parse</span>(<span class="params"> dateStr </span>)</span>&#123;</span><br><span class="line">   <span class="keyword">if</span>( dateStr <span class="keyword">instanceof</span> <span class="built_in">Date</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> dateStr;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>( <span class="regexp">/^\d+$/</span>.test( dateStr ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>( <span class="built_in">parseInt</span>( dateStr , <span class="number">10</span> ) );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>( <span class="built_in">Date</span>.parse( dateStr.replace(<span class="regexp">/-/g</span>,<span class="string">'/'</span>) ) );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="搜索框的值">搜索框的值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#js_ipt"</span>)</span><br><span class="line">   .focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;$(<span class="keyword">this</span>).val(<span class="string">''</span>)&#125;)</span><br><span class="line">   .blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>);</span><br><span class="line">    ($<span class="keyword">this</span>.val() === <span class="string">''</span>)? $<span class="keyword">this</span>.val(<span class="string">'请搜索...'</span>) : <span class="literal">null</span>;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>
<h4 id="部分刷新">部分刷新</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">  $(<span class="string">"#content"</span>).load(url);</span><br><span class="line"> &#125;, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure>
<h4 id="密码强度">密码强度</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//密码为八位及以上并且字母数字特殊字符三项都包括</span></span><br><span class="line"><span class="keyword">var</span> strongRegex = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^(?=.&#123;8,&#125;)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\W).*$"</span>, <span class="string">"g"</span>);</span><br><span class="line"><span class="comment">//密码为七位及以上并且字母、数字、特殊字符三项中有两项，强度是中等 </span></span><br><span class="line"><span class="keyword">var</span> mediumRegex = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^(?=.&#123;7,&#125;)(((?=.*[A-Z])(?=.*[a-z]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[0-9]))).*$"</span>, <span class="string">"g"</span>);</span><br><span class="line"><span class="comment">//更多字符</span></span><br><span class="line"><span class="keyword">var</span> enoughRegex = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(?=.&#123;6,&#125;).*"</span>, <span class="string">"g"</span>);</span><br></pre></td></tr></table></figure>
<h4 id="滚动动态加载内容">滚动动态加载内容</h4><p><code>javascript
var loading = false;
$(window).scroll(function(){
 if((($(window).scrollTop()+$(window).height())+250)&gt;=$(document).height()){
   if(loading == false){
      loading = true;
      $(&#39;#loadingbar&#39;).css(&quot;display&quot;,&quot;block&quot;);
      $.ajax({
          url:&#39;/getData.json&#39;,
          type:&#39;POST&#39;,
          dataType:&#39;json&#39;,
          data:{
              id:&#39;123&#39;
          }
      }).done(function(data){
          if(data.ret){
          }
      });
    }
  }
});</code>javascript</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="getBoundingClientRect">getBoundingClientRect</h4><blockquote>
<p>计算视口坐标,方法返回一个有left、right、top、bottom属性的对象，分别表示元素四个位置的相对于视口的坐标。getBoundingClientRect所返回的坐标包含元素的内边距和边框，不包含外边距。兼容性很好，非常好用.</p>
</blockquote>
<h4 id="scrollIntoView">scrollIntoView</h4><blockquote>
<p>可以让元素直接呈现到可视区域，实际上是屏幕显示区的最顶端<br>]]>
    
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[异步javascript]]></title>
    <link href="http://blog.xuerlove.com/2015/11/18/%E5%BC%82%E6%AD%A5javascript/"/>
    <id>http://blog.xuerlove.com/2015/11/18/异步javascript/</id>
    <published>2015-11-18T07:03:01.000Z</published>
    <updated>2016-04-14T02:13:07.000Z</updated>
    <content type="html"><![CDATA[<h4 id="什么是异步javascript">什么是异步javascript</h4><blockquote>
<p>顺序的执行的代码，我们称之为同步代码，异步的过程就是让有些非常耗时的javascript代码放在异步模块中之行，同步代码之行结束后再去之行它。</p>
</blockquote>
<h4 id="异步javascript发展过程">异步javascript发展过程</h4><ul>
<li>回调函数<br>  函数可以作为参数传递给另一个函数，这样的过程称之为回调，当执行完函数的内容后，执行回调函数，来完成异步的模拟。<br>  回调函数可以使程序编的简单易懂，但是耦合性确比较高，维护起来比较麻烦。错误处理容易被忽视，不能return,使用不当会让程序非常臃肿。<a id="more"></a></li>
<li>事件监听<br>  通过事件监听，触发达到异步执行代码的过程。</li>
<li>发布订阅<br>  我们可以创建发布／订阅模式，或者观察者模式，通过订阅，发布的过程来实现异步</li>
<li>Promises<br>  Promises是一种规范，Promises允许我们通过链式调用的方式编写代码，增强了代码的可读性。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="什么是异步javascript">什么是异步javascript</h4><blockquote>
<p>顺序的执行的代码，我们称之为同步代码，异步的过程就是让有些非常耗时的javascript代码放在异步模块中之行，同步代码之行结束后再去之行它。</p>
</blockquote>
<h4 id="异步javascript发展过程">异步javascript发展过程</h4><ul>
<li>回调函数<br>  函数可以作为参数传递给另一个函数，这样的过程称之为回调，当执行完函数的内容后，执行回调函数，来完成异步的模拟。<br>  回调函数可以使程序编的简单易懂，但是耦合性确比较高，维护起来比较麻烦。错误处理容易被忽视，不能return,使用不当会让程序非常臃肿。]]>
    
    </summary>
    
      <category term="javascript" scheme="http://blog.xuerlove.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[动画]]></title>
    <link href="http://blog.xuerlove.com/2015/11/17/%E5%8A%A8%E7%94%BB/"/>
    <id>http://blog.xuerlove.com/2015/11/17/动画/</id>
    <published>2015-11-17T07:03:01.000Z</published>
    <updated>2016-04-14T02:12:41.000Z</updated>
    <content type="html"><![CDATA[<h4 id="css动画">css动画</h4><ul>
<li>translate</li>
<li>transation<h4 id="animate">animate</h4></li>
<li>javascript动画</li>
<li>setTimeout</li>
<li>setInterval</li>
<li>requestAnimationFrame<a id="more"></a>
<h4 id="jquery动画">jquery动画</h4></li>
<li>animate<h4 id="js动画库">js动画库</h4><h4 id="canvas动画">canvas动画</h4></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="css动画">css动画</h4><ul>
<li>translate</li>
<li>transation<h4 id="animate">animate</h4></li>
<li>javascript动画</li>
<li>setTimeout</li>
<li>setInterval</li>
<li>requestAnimationFrame]]>
    
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Synergy实现多个主机之间共享键鼠]]></title>
    <link href="http://blog.xuerlove.com/2015/11/16/Synergy%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%B8%AA%E4%B8%BB%E6%9C%BA%E4%B9%8B%E9%97%B4%E5%85%B1%E4%BA%AB%E9%94%AE%E9%BC%A0/"/>
    <id>http://blog.xuerlove.com/2015/11/16/Synergy实现多个主机之间共享键鼠/</id>
    <published>2015-11-16T07:03:01.000Z</published>
    <updated>2016-04-14T02:17:32.000Z</updated>
    <content type="html"><![CDATA[<h5 id="工具">工具</h5><ul>
<li>Synergy软件</li>
<li>两台电脑，一套键鼠<a id="more"></a>
<h5 id="使用方法">使用方法</h5></li>
<li>A电脑做为共享键鼠的主机</li>
<li>B电脑去使用共享的键鼠</li>
<li>A电脑打开软件后选择共享选项</li>
<li>B电脑配置成使用另一台电脑的键鼠，并且配置A电脑IP</li>
<li>A电脑点击配置服务，然后在B电脑显示器对应的图标上点击，然后输入B电脑的display name然后确认即可</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h5 id="工具">工具</h5><ul>
<li>Synergy软件</li>
<li>两台电脑，一套键鼠]]>
    
    </summary>
    
      <category term="tools" scheme="http://blog.xuerlove.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Jcrop]]></title>
    <link href="http://blog.xuerlove.com/2015/11/15/Jcrop/"/>
    <id>http://blog.xuerlove.com/2015/11/15/Jcrop/</id>
    <published>2015-11-15T07:03:01.000Z</published>
    <updated>2016-04-14T02:15:45.000Z</updated>
    <content type="html"><![CDATA[<h4 id="引用资源">引用资源</h4><h5 id="css">css</h5><p><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;jquery.Jcrop.css&quot;&gt;</code></p>
<h5 id="JavaScript">JavaScript</h5><p><code>&lt;script src=&quot;jquery.js&quot;&gt;&lt;/script&gt;</code><br><code>&lt;script src=&quot;jquery.Jcrop.js&quot;&gt;&lt;/script&gt;</code><br><a id="more"></a></p>
<h5 id="使用">使用</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img id=<span class="string">"image"</span> src=<span class="string">"image.jpg"</span>&gt;</span><br><span class="line"></span><br><span class="line">$(<span class="string">'#image'</span>).Jcrop();</span><br></pre></td></tr></table></figure>
<h5 id="参数">参数</h5><p>|属性    |值    |描述|<br>|| :– ||:–: ||:–: ||<br>|allowSelect|    true|    允许新选框|<br>|allowMove|    true    |允许选框移动|<br>|allowResize|    true|    允许选框缩放|<br>|aspectRatio|    1    |选框宽高比。说明：width/height|<br>|keySupport|    true|    支持键盘控制。按键列表：上下左右（移动选框）、Esc（取消选框）|<br>|dragEdges|    true|    允许拖动边框|<br>|boxWidth    |100|    画布宽度|<br>|boxHeight|    100    |画布高度|<br>|minSelect|    [10,10]|    选择框最小选择尺寸。说明：若选择框小于该尺寸，则自动取消选择|<br>|maxSize|    [10,10]|    选择框最大尺寸|<br>|minSize    |[10,10]|    选择框最小尺寸|<br>|onChange|    function(data){}|    选择框改变时的事件|<br>|onSelect    |function(data){}|    选择框选定时的事件|<br>|onDblClick    |function(data){}|    在选择框内双击时的事件|<br>|onRelease    |function(data){}|    取消选择框时的事件|<br>后面四个回调函数的参数data是一个对象，包含所选尺寸的x,y,w,h</p>
<h5 id="API介绍">API介绍</h5><p>|方法|    描述|<br>|| :– ||:–: ||<br>|getBounds()    |获取图片实际尺寸，格式为：[w, h]|<br>|getWidgetSize()    |获取图片显示尺寸，格式为：[w, h]|<br>|getScaleFactor()    |获取图片缩放的比例，格式为：[w, h]|</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="引用资源">引用资源</h4><h5 id="css">css</h5><p><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;jquery.Jcrop.css&quot;&gt;</code></p>
<h5 id="JavaScript">JavaScript</h5><p><code>&lt;script src=&quot;jquery.js&quot;&gt;&lt;/script&gt;</code><br><code>&lt;script src=&quot;jquery.Jcrop.js&quot;&gt;&lt;/script&gt;</code><br>]]>
    
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[smartcropJs]]></title>
    <link href="http://blog.xuerlove.com/2015/11/14/smartcropJs/"/>
    <id>http://blog.xuerlove.com/2015/11/14/smartcropJs/</id>
    <published>2015-11-14T07:03:01.000Z</published>
    <updated>2016-04-14T02:17:30.000Z</updated>
    <content type="html"><![CDATA[<h4 id="智能识别裁剪图片">智能识别裁剪图片</h4><p>[github|<a href="https://github.com/jwagner/smartcrop.js" target="_blank" rel="external">https://github.com/jwagner/smartcrop.js</a>]</p>
<h4 id="how_to_use">how to use</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SmartCrop.crop(image, &#123;width: <span class="number">100</span>, height: <span class="number">100</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;<span class="built_in">console</span>.log(result);&#125;);</span><br><span class="line"><span class="comment">// &#123;topCrop: &#123;x: 300, y: 200, height: 200, width: 200&#125;&#125;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="兼容性">兼容性</h4><p>除IE6,7,8</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="智能识别裁剪图片">智能识别裁剪图片</h4><p>[github|<a href="https://github.com/jwagner/smartcrop.js">https://github.com/jwagner/smartcrop.js</a>]</p>
<h4 id="how_to_use">how to use</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SmartCrop.crop(image, &#123;width: <span class="number">100</span>, height: <span class="number">100</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;<span class="built_in">console</span>.log(result);&#125;);</span><br><span class="line"><span class="comment">// &#123;topCrop: &#123;x: 300, y: 200, height: 200, width: 200&#125;&#125;</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RactiveJs应用]]></title>
    <link href="http://blog.xuerlove.com/2015/11/13/RactiveJs%E5%BA%94%E7%94%A8/"/>
    <id>http://blog.xuerlove.com/2015/11/13/RactiveJs应用/</id>
    <published>2015-11-13T07:03:01.000Z</published>
    <updated>2016-04-14T02:17:24.000Z</updated>
    <content type="html"><![CDATA[<h4 id="简介">简介</h4><p>Ractive.js是一款简单却功能强大的JS库，它实现了模板，数据绑定，DOM实时更新，事件处理等多个有用的功能。</p>
<h4 id="应用">应用</h4><p>关联dom和模版<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//html</span></span><br><span class="line">&lt;div id=<span class="string">'output'</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">id</span>=<span class="value">'template'</span> <span class="attribute">type</span>=<span class="value">'text/ractive'</span>&gt;</span><span class="undefined"></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//js</span><br><span class="line">var ractive = new Ractive(&#123;</span><br><span class="line">	el: '#output',</span><br><span class="line">	template: '#template'</span><br><span class="line">&#125;);</span><br><span class="line">```<span class="comment">&lt;!--more--&gt;</span></span><br><span class="line">#### 模版内绑定属性</span><br><span class="line">```javascript</span><br><span class="line">//html</span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">'output'</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">id</span>=<span class="value">'template'</span> <span class="attribute">type</span>=<span class="value">'text/ractive'</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span></span><span class="expression">&#123;&#123;<span class="variable">greeting</span>&#125;&#125;</span><span class="xml"> </span><span class="expression">&#123;&#123;<span class="variable">name</span>&#125;&#125;</span><span class="xml">!<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"></span></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//js</span><br><span class="line">var ractive = new Ractive(&#123;</span><br><span class="line">	el: '#output',</span><br><span class="line">	template: '#template'，</span><br><span class="line">        data: &#123;</span><br><span class="line">	    greeting: 'Hello',</span><br><span class="line">	    name: 'world'</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span></span><br></pre></td></tr></table></figure></p>
<h4 id="配置">配置</h4><h4 id="模版">模版</h4><h4 id="mustache模版">mustache模版</h4><h4 id="数据和绑定">数据和绑定</h4><h4 id="事件">事件</h4><h4 id="过度效果和动画">过度效果和动画</h4><h4 id="组件">组件</h4><h4 id="API">API</h4><h4 id="插件">插件</h4><h4 id="待续">待续</h4>]]></content>
    <summary type="html">
    <![CDATA[<h4 id="简介">简介</h4><p>Ractive.js是一款简单却功能强大的JS库，它实现了模板，数据绑定，DOM实时更新，事件处理等多个有用的功能。</p>
<h4 id="应用">应用</h4><p>关联dom和模版<br><figure class="highli]]>
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[avalon应用]]></title>
    <link href="http://blog.xuerlove.com/2015/11/12/avalon%E5%BA%94%E7%94%A8/"/>
    <id>http://blog.xuerlove.com/2015/11/12/avalon应用/</id>
    <published>2015-11-12T07:03:01.000Z</published>
    <updated>2016-04-14T02:13:33.000Z</updated>
    <content type="html"><![CDATA[<h4 id="介绍：">介绍：</h4><p>avalon是一个轻量型的MVVM框架</p>
<h4 id="配置：">配置：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">avalon.config(&#123;</span><br><span class="line">    debug: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>为了方便调试，我们把debug模式设为true,那么avalon源码中的所有调试信息都会在控制台输出，我们把debug设为false就可以屏蔽它们。<a id="more"></a></p>
<h4 id="定义">定义</h4><p><code>avalon.define()</code><br>对html页面的处理：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span> <span class="attribute">ms-controller</span>=<span class="value">"page_model"</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span>&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span>&#123;&#123;from&#125;&#125;<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript:;"</span> <span class="attribute">ms-click</span>=<span class="value">"check"</span>&gt;</span>click<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = avalon.define(&#123;</span><br><span class="line">    $id: <span class="string">"page_model"</span>,</span><br><span class="line">    name: <span class="string">'wz'</span>,</span><br><span class="line">    age: <span class="number">25</span>,</span><br><span class="line">    from: <span class="string">'changchun'</span></span><br><span class="line">    check: <span class="function"><span class="keyword">function</span>(<span class="params">$events</span>)</span>&#123;</span><br><span class="line">       $events.preventDefault();</span><br><span class="line">       <span class="comment">//do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<ul>
<li>avalon.define定义页面对应的controller</li>
<li>放在$skipArray数组里面的属性，将不会被扫描</li>
<li>单向绑定 需要在ms-*属性的值前面加::，或花括号内部的前面加::</li>
</ul>
<h4 id="常用属性">常用属性</h4><ul>
<li><code>ms-duplex / ms-duplex-text —text</code></li>
<li><code>ms-visible —boolean</code></li>
<li><code>ms-repeat —list</code></li>
<li><code>ms-value /</code></li>
<li><code>ms-attr-*</code> —对应html标签的属性</li>
<li><code>ms-data</code></li>
<li><code>ms-click</code></li>
<li><code>ms-class / ms-hover / ms-active</code></li>
<li><code>ms-widget</code></li>
<li><p><code>$watch</code> 属性监控</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">avalon.vmodels.grid.room_checked.$watch(<span class="string">"length"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">     $avalon.vmodels.grid.allchecked = n === $$.grid.all_room.size();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>$unwatch</code> 解除监控</p>
</li>
<li><code>$events</code> 对象，avalon中这个对象替代我们之前用的 event<h4 id="扫描">扫描</h4></li>
<li>把视图中的所有指令全部抽取出来，转换为一个个视图刷新函数，然后放到一个个数组中，当VM的属性变动时，就会执行这些数组的函数。数组里面的东西不定是函数，也可能是对象，但里面肯定有个视图刷新函数。</li>
<li>avalon.scan，有两个可选参数，第一个是元素节点，第二个是数组，里面为一个个VM。<h4 id="模版">模版</h4></li>
<li>ms-html 可以加载一段html结构</li>
<li>ms-include=”template” 负值一个模版变量，用于加载一段html结构</li>
<li>ms-include-src=”aaa.html” 用于加载一个资源<h4 id="类操作">类操作</h4></li>
<li>ms-class,</li>
<li>ms-hover</li>
<li>ms-active<h4 id="事件绑定">事件绑定</h4></li>
<li>ms-on-*<h4 id="绑定">绑定</h4></li>
<li>显示绑定ms-visible</li>
<li>插入绑定ms-if</li>
<li>双工绑定ms-duplex</li>
<li>样式绑定ms-css</li>
<li>数据绑定ms-data</li>
<li>属性绑定ms-attr</li>
<li>循环绑定<ul>
<li><code>ms-repeat 用于循环数组与对象 循环当前元素</code></li>
<li><code>ms-each 用于循环数组 循环当前元素的内部</code></li>
<li><code>ms-with 用于循环对象 循环当前元素的内部</code></li>
<li><code>el: 默认el，也可以用ms-repeat-item，就变成了item指向当前元素。</code></li>
<li><code>$first: 判定是否为监控数组的第一个元素</code></li>
<li><code>$last: 判定是否为监控数组的最后一个元素</code></li>
<li><code>$index: 得到当前元素的索引值</code></li>
<li><code>$outer: 得到外围循环的那个元素。</code></li>
<li><code>$remove: 这是一个方法，用于移除此元素</code></li>
</ul>
</li>
<li>动画绑定ms-effect<h4 id="过滤器">过滤器</h4></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">它只能用于&#123;&#123;&#125;&#125;插值表达式。如果不存在参数，要求直接跟|filter，如果存在参传，则要用小括号括起，参数要有逗号</span><br><span class="line">* html</span><br><span class="line">* uppercase</span><br><span class="line">* lowercase</span><br><span class="line">* truncate – 对长字符串进行截短，truncate(number, truncation), number默认为<span class="number">30</span></span><br><span class="line">* camelize --驼峰化处理</span><br><span class="line">* <span class="built_in">escape</span> --对类似于HTML格式的字符串进行转义</span><br><span class="line">* currency</span><br><span class="line">* number</span><br><span class="line">* date</span><br><span class="line">* 自定义过滤器</span><br><span class="line">avalon.filters.format = <span class="function"><span class="keyword">function</span>(<span class="params">str, args, args2</span>)</span>&#123;</span><br><span class="line">   <span class="comment">//str为原数据，默认传入，此方法必须返回一个值</span></span><br><span class="line">   <span class="comment">/* 具体逻辑 */</span></span><br><span class="line">   <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="AJAX">AJAX</h4><ul>
<li>功能同jquery ajax<h4 id="路由">路由</h4><h4 id="加载器">加载器</h4><h4 id="自定义指令">自定义指令</h4><h4 id="显示优化">显示优化</h4></li>
<li><p><code>.ms-controller, [ms-controller]{ visibility:hidden}</code></p>
</li>
<li><p>我们在页面使用了大量插值表达式，网速慢时，就会被用户看到，认为是乱码了。为了预防这种情况， 我们可以在样式中定义 <code>.ms-controller, [ms-controller]{ visibility:hidden}</code> 那么当元素被扫描后，它们才会安全显示出来。</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="介绍：">介绍：</h4><p>avalon是一个轻量型的MVVM框架</p>
<h4 id="配置：">配置：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">avalon.config(&#123;</span><br><span class="line">    debug: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>为了方便调试，我们把debug模式设为true,那么avalon源码中的所有调试信息都会在控制台输出，我们把debug设为false就可以屏蔽它们。]]>
    
    </summary>
    
      <category term="web" scheme="http://blog.xuerlove.com/tags/web/"/>
    
  </entry>
  
</feed>
