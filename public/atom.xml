<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[黑卓]]></title>
  <subtitle><![CDATA[Encode my life]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.xuerlove.com/"/>
  <updated>2017-03-19T04:28:34.000Z</updated>
  <id>http://www.xuerlove.com/</id>
  
  <author>
    <name><![CDATA[黑卓]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[nodejs搭建http2服务]]></title>
    <link href="http://www.xuerlove.com/2017/03/19/nodejs%E6%90%AD%E5%BB%BAhttp2%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.xuerlove.com/2017/03/19/nodejs搭建http2服务/</id>
    <published>2017-03-19T03:02:18.000Z</published>
    <updated>2017-03-19T04:28:34.000Z</updated>
    <content type="html"><![CDATA[<p>http经历了1.0/1.1/2.0的过程，在http1.0的时代如果客户端和服务端要建立一个长链接，需要通过keep-alive来告知服务器需要建立一个长链接。而http1.1默认就支持了长链接，可以用长链接发多个请求，http1.1支持数据的chunk方式的传输，可以分块对内容进行传输。http2.0支持多路复用，可以同一个链接并发处理多个请求。</p>
<a id="more"></a>
<h5 id="nodejs">nodejs</h5><p>使用http2的npm包来实现服务器开发，先创建一个新的文件夹，在文件夹下面执行 npm init，会创建package.json文件，然后执行 npm install http2 –save，安装好http2模块，创建app.js文件：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">const</span> http2 = <span class="built_in">require</span>(<span class="string">'http2'</span>);</div><div class="line"><span class="keyword">const</span> options = &#123;</div><div class="line">  <span class="attr">key</span>: fs.readFileSync(<span class="string">'/home/cert/server.key'</span>),</div><div class="line">  <span class="attr">cert</span>: fs.readFileSync(<span class="string">'/home/cert/server.crt'</span>)</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="built_in">require</span>(<span class="string">'http2'</span>).createServer(options, (request, response) =&gt; &#123;</div><div class="line">  response.end(<span class="string">'Hello world!'</span>);</div><div class="line">&#125;).listen(<span class="number">8181</span>);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'server start listen port 8181.'</span>);</div></pre></td></tr></table></figure></p>
<p>使用pm2管理nodejs程序，npm install pm2 -g 全局安装pm2模块，使用 pm2 start app.js 启动服务。<br>在浏览器中访问 xxx.xxx.xxx.xxx:8181 页面输出 Hello world 内容，打开浏览器控制台输入 chrome.loadTimes()<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	<span class="string">"requestTime"</span>: <span class="number">1489892055.336</span>,</div><div class="line">	<span class="string">"startLoadTime"</span>: <span class="number">1489892055.336</span>,</div><div class="line">	<span class="string">"commitLoadTime"</span>: <span class="number">1489892055.711</span>,</div><div class="line">	<span class="string">"finishDocumentLoadTime"</span>: <span class="number">1489892055.728</span>,</div><div class="line">	<span class="string">"finishLoadTime"</span>: <span class="number">1489892055.764</span>,</div><div class="line">	<span class="string">"firstPaintTime"</span>: <span class="number">1489892055.764</span>,</div><div class="line">	<span class="string">"firstPaintAfterLoadTime"</span>: <span class="number">0</span>,</div><div class="line">	<span class="string">"navigationType"</span>: <span class="string">"Reload"</span>,</div><div class="line">	<span class="string">"wasFetchedViaSpdy"</span>: <span class="literal">true</span>,</div><div class="line">	<span class="string">"wasNpnNegotiated"</span>: <span class="literal">true</span>,</div><div class="line">	<span class="string">"npnNegotiatedProtocol"</span>: <span class="string">"h2"</span>,</div><div class="line">	<span class="string">"wasAlternateProtocolAvailable"</span>: <span class="literal">false</span>,</div><div class="line">	<span class="string">"connectionInfo"</span>: <span class="string">"h2"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>connectionInfo: “h2” 表示已经是http2的协议。</p>
<h5 id="nginx">nginx</h5><p>使用nginx代理nodejs服务器，因为http2要求必须是https协议，所以我们先创建证书，可以在 <a href="https://www.pianyissl.com/" target="_blank" rel="external">便宜SSL</a> 这个网站申请免费的证书，前提是需要我们有一个域名，并且有对域名的绝对控制权，还需要一个企业域名邮箱，来接收处理证书的邮件。企业邮箱使用个人域名解析，可以在阿里云购买域名和企业邮箱。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">upstream  http2s&#123;</div><div class="line">     server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8181</span>;</div><div class="line">&#125;</div><div class="line">server &#123;</div><div class="line">        listen <span class="number">443</span> ssl http2 default_server;</div><div class="line">        server_name  xuerlove.com;</div><div class="line">        charset utf8;</div><div class="line">        ssl on;</div><div class="line">        ssl_certificate             /etc/nginx/cert/server.pem;</div><div class="line">        ssl_certificate_key         /etc/nginx/cert/server.key;</div><div class="line">        ssl_session_timeout         <span class="number">5</span>m;</div><div class="line">        ssl_protocols               SSLv3 TLSv1;</div><div class="line">        ssl_ciphers                 ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</div><div class="line">        ssl_prefer_server_ciphers   on;</div><div class="line">        proxy_set_header  Host  $host;</div><div class="line">        proxy_set_header  X-Real-IP  $remote_addr;</div><div class="line">        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">        location / &#123;</div><div class="line">                proxy_pass https:<span class="comment">//http2s;</span></div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>以上使用到的证书都是在 <a href="https://www.pianyissl.com/" target="_blank" rel="external">便宜SSL</a> 这个网站生成的。</p>
<h5 id="验证">验证</h5><p>浏览器访问 <a href="https://xuerlove.com，验证证书的正确性以及http2服务。" target="_blank" rel="external">https://xuerlove.com，验证证书的正确性以及http2服务。</a></p>
]]></content>
    <summary type="html">
    <![CDATA[nodejs搭建http2服务]]>
    
    </summary>
    
      <category term="nodejs" scheme="http://www.xuerlove.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[函数消抖和函数截流]]></title>
    <link href="http://www.xuerlove.com/2017/02/23/%E5%87%BD%E6%95%B0%E6%B6%88%E6%8A%96%E5%92%8C%E5%87%BD%E6%95%B0%E6%88%AA%E6%B5%81/"/>
    <id>http://www.xuerlove.com/2017/02/23/函数消抖和函数截流/</id>
    <published>2017-02-23T05:35:15.000Z</published>
    <updated>2017-02-23T05:35:52.000Z</updated>
    <content type="html"><![CDATA[<p>函数消抖和函数截流在开发过程中的应用场景确实不少，比如我们监听页面滚动，然后做一些页面操作，这时候我们发现我们执行函数的调用频率非常的高，会引发一些性能的问题，这时候我们就要用到函数截流了。再比如说我们页面中有一个提交按钮，我们不希望用户频繁点击频繁提交数据，那么我们可以使用函数消抖，再比如说页面中有suggest提示，我们同样不希望用户每变更一点消息都去请求服务器，我们也可以使用函数消抖，用户操作停止了才去请求服务器。</p>
<a id="more"></a>
<p>以underscore.js中的代码为例:</p>
<h5 id="代码实现">代码实现</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> _ = &#123;</div><div class="line">    now() &#123;</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime();</div><div class="line">    &#125;,</div><div class="line">    debounce(func, wait, immediate) &#123;</div><div class="line">        <span class="keyword">let</span> timeout, args, context, timestamp, result;</div><div class="line">        <span class="keyword">let</span> later = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">let</span> last = _.now() - timestamp;</div><div class="line">            <span class="keyword">if</span> (last &lt; wait &amp;&amp; last &gt;= <span class="number">0</span>) &#123;</div><div class="line">                timeout = setTimeout(later, wait - last);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                timeout = <span class="literal">null</span>;</div><div class="line">                <span class="keyword">if</span> (!immediate) &#123;</div><div class="line">                    result = func.apply(context, args);</div><div class="line">                    <span class="keyword">if</span> (!timeout) context = args = <span class="literal">null</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            context = <span class="keyword">this</span>;</div><div class="line">            args = <span class="built_in">arguments</span>;</div><div class="line">            timestamp = _.now();</div><div class="line">            <span class="keyword">let</span> callNow = immediate &amp;&amp; !timeout;</div><div class="line">            <span class="keyword">if</span> (!timeout) timeout = setTimeout(later, wait);</div><div class="line">            <span class="keyword">if</span> (callNow) &#123;</div><div class="line">                result = func.apply(context, args);</div><div class="line">                context = args = <span class="literal">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> result;</div><div class="line">        &#125;;</div><div class="line">    &#125;,</div><div class="line">    throttle(func, wait, options) &#123;</div><div class="line">        <span class="keyword">let</span> context, args, result;</div><div class="line">        <span class="keyword">let</span> timeout = <span class="literal">null</span>;</div><div class="line">        <span class="keyword">let</span> previous = <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span> (!options) options = &#123;&#125;;</div><div class="line">        <span class="keyword">let</span> later = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            previous = options.leading === <span class="literal">false</span> ? <span class="number">0</span> : _.now();</div><div class="line">            timeout = <span class="literal">null</span>;</div><div class="line">            result = func.apply(context, args);</div><div class="line">            <span class="keyword">if</span> (!timeout) context = args = <span class="literal">null</span>;</div><div class="line">        &#125;;</div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">let</span> now = _.now();</div><div class="line">            <span class="keyword">if</span> (!previous &amp;&amp; options.leading === <span class="literal">false</span>) previous = now;</div><div class="line">            <span class="keyword">let</span> remaining = wait - (now - previous);</div><div class="line">            context = <span class="keyword">this</span>;</div><div class="line">            args = <span class="built_in">arguments</span>;</div><div class="line">            <span class="keyword">if</span> (remaining &lt;= <span class="number">0</span> || remaining &gt; wait) &#123;</div><div class="line">                <span class="keyword">if</span> (timeout) &#123;</div><div class="line">                    clearTimeout(timeout);</div><div class="line">                    timeout = <span class="literal">null</span>;</div><div class="line">                &#125;</div><div class="line">                previous = now;</div><div class="line">                result = func.apply(context, args);</div><div class="line">                <span class="keyword">if</span> (!timeout) context = args = <span class="literal">null</span>;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!timeout &amp;&amp; options.trailing !== <span class="literal">false</span>) &#123;</div><div class="line">                timeout = setTimeout(later, remaining);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> result;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h5 id="调用">调用</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"search"</span> <span class="attr">value</span>=<span class="string">"search"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-3.1.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// debounce</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleQuery</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>)</div><div class="line">&#125;</div><div class="line"><span class="keyword">let</span> lazyQuery = _.debounce(handleQuery, <span class="number">300</span>);</div><div class="line">$(<span class="string">'#search'</span>).click(lazyQuery);</div><div class="line"></div><div class="line"><span class="comment">// throttle</span></div><div class="line">$(<span class="string">'body'</span>).height(<span class="number">10000</span>);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleScroll</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>)</div><div class="line">&#125;</div><div class="line"><span class="keyword">let</span> throttled = _.throttle(handleScroll, <span class="number">100</span>, &#123;</div><div class="line">    <span class="attr">leading</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">trailing</span>: <span class="literal">false</span></div><div class="line">&#125;);</div><div class="line">$(<span class="built_in">window</span>).scroll(throttled);</div></pre></td></tr></table></figure>
<p>合理的使用函数消抖和函数截流，可以优化我们页面显示，页面性能以及减轻服务器压力。</p>
<h5 id="注意">注意</h5><p>我们在调用setTimeout的时候，记住尽量不要在参数中写一个匿名的回调函数，这样每次在执行setTimeout的时候都会为匿名函数去开辟一段内存空间，而使用一个之前已经声明过的函数，则不需要额外分配内存空间。</p>
]]></content>
    <summary type="html">
    <![CDATA[函数消抖和函数截流]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浏览器请求头和响应头]]></title>
    <link href="http://www.xuerlove.com/2017/02/21/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%B7%E6%B1%82%E5%A4%B4%E5%92%8C%E5%93%8D%E5%BA%94%E5%A4%B4/"/>
    <id>http://www.xuerlove.com/2017/02/21/浏览器请求头和响应头/</id>
    <published>2017-02-21T11:21:01.000Z</published>
    <updated>2017-02-24T03:59:19.000Z</updated>
    <content type="html"><![CDATA[<p>前端开发要经常和页面打交道，我们使用浏览器访问一个页面的时候，要把请求头发送给服务器，然后服务器会返回一个响应头，在请求头和响应头中包含着大量有用的信息，它们能够传递数据，能够指导浏览器行为等等，接下来我们就一起看看，请求头和响应头中都包含了哪些信息，以及各自的作用是什么，我们可以利用这些信息做些什么。</p>
<a id="more"></a>
<h5 id="common_headers">common headers</h5><p>Cache-Control 缓存控制</p>
<pre><code>* 请求头: no-cache、no-store、<span class="built_in">max</span>-age、 <span class="built_in">max</span>-stale、<span class="built_in">min</span>-fresh、<span class="keyword">only</span>-<span class="keyword">if</span>-cached
* 响应头: <span class="keyword">public</span>、<span class="keyword">private</span>、no-cache、no- store、no-transform、must-revalidate、proxy-revalidate、<span class="built_in">max</span>-age
* no-cache：不缓存
</code></pre><p>　　    <em> no-store：删除缓存
　　     </em> max-age：缓存超时时间<br>　　    <em> min-fresh：未来多长时间内要保持内容一致最新
　　    </em> max-stale：客户端可以接收过期响应消息<br>　　    <em> only-if-cached：只有当缓存中有副本存在时，客户端才会获得一份副本。
　　    </em> Public：缓存内容<br>　　    * Private：不能被共享缓存处理<br>Pragma 缓存控制 http 1.0 的属性，作用同Cahce-Control<br>Connection 连接方式,表示是否需要持久连接</p>
<pre><code><span class="bullet">* </span>Close 请求完成后立即关闭
<span class="bullet">* </span>Keepalive 请求完成后不要关闭 ，等待后续的请求
<span class="bullet">* </span>Keep-Alive 请求关闭的时间
</code></pre><p>Date 当前的GMT时间<br>Transfer-Encoding 响应消息体编码方式<br>Upgrade 指定另一种可能完全不同的协议，主要用来测试是否支持其他版本的协议<br>Via 列出途经代理服务器</p>
<h5 id="request_headers">request headers</h5><p>Accept 客户端接受文件类型<br>Accept-Charset 客户端接受的字符集<br>Accept-Encoding 指定可接受的内容编码<br>Accept-Language 指定可接受自然语言<br>Authorization 授权信息<br>Host URL中的主机和端口<br>User-Agent 浏览器类型<br>Cookie 存储一些网站信息获取用户信息<br>Content-Length 请求消息的长度<br>Referer 从哪个url到当前页面的<br>If-Match ETag没有改变才执行请求的动作<br>If-None-Match ETag改变了才执行请求的动作<br>If-Modified-Since 请求的对象在该头部指定的时间之后修改了，才执行请求的动作<br>If-Unmodified-Since 请求的对象在该头部指定的时间之后没修改过，才执行请求的动作<br>If-Range 浏览器告诉 WEB 服务器，如果我请求的对象没有改变，就把我缺少的部分给我，如果对象改变了，就把整个对象给我<br>Range 浏览器告诉 WEB 服务器自己想取对象的哪部分。<br>Proxy-Authenticate 代理服务器响应浏览器，要求其提供代理身份验证信息。<br>Proxy-Authorization 浏览器响应代理服务器的身份验证请求，提供自己的身份信息。</p>
<h5 id="response_headers">response headers</h5><p>Allow 服务器支持请求方法<br>Content-Encoding 文档的编码方法<br>Content-Type 文档类型<br>Content-Length 文档大小<br>Etag 对象的标志值<br>Expires 文档过期时间<br>Last-Modified 文档的最后改动时间<br>Location 浏览器应当到哪里去提取文档<br>Refresh 浏览器多少时间之后刷新文档<br>Age 当代理服务器用自己缓存的实体去响应请求时，用该头部表明该实体从产生到现在经过多长时间了。<br>Server　WEB 服务器表明自己是什么软件及版本等信息。<br>Accept-Ranges WEB服务器表明自己是否接受获取其某个实体的一部分的请求。<br>Vary WEB服务器用该头部的内容告诉 Cache 服务器，在什么条件下才能用本响应所返回的对象响应后续的请求。</p>
<h5 id="应用">应用</h5><p>我们可以使用缓存的控制，合理的控制页面的缓存，减少服务器压力，减少页面响应时间。<br>通过头部信息方便我们拿到一些有用的数据，例如ip,ua,referer等。</p>
]]></content>
    <summary type="html">
    <![CDATA[浏览器请求头和响应头]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浏览器输入url后发生了什么]]></title>
    <link href="http://www.xuerlove.com/2017/02/21/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BE%93%E5%85%A5url%E5%90%8E%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/"/>
    <id>http://www.xuerlove.com/2017/02/21/浏览器输入url后发生了什么/</id>
    <published>2017-02-21T11:20:35.000Z</published>
    <updated>2017-03-08T12:42:00.000Z</updated>
    <content type="html"><![CDATA[<p>日常生活中，我们经常使用浏览器浏览网页，在地址栏输入一个网址，然后敲回车，接着一个网页就呈现在浏览器中了，那么从输入页面地址到我们看到页面，这中间都发生了什么呢？接下来我们就一起去分析一下。</p>
<a id="more"></a>
<h5 id="输入一个网址">输入一个网址</h5><p>在浏览器地址栏中输入一个网址 xuerlove.com</p>
<h5 id="缓存判断">缓存判断</h5><p>浏览器会去浏览器缓存文件中查找对应网址的缓存文件，如果找到了缓存的文件，查看缓存文件的响应头信息，根据Last-Modified时间，Expires时间或者Cache-Control max-age的时间去判断缓存是否过期，如果没有过期则返回一个 200 frome cache 的状态码，然后使用缓存的文件，接下来浏览器加载，解析，渲染等等。<br>如果缓存过期了，或者根本就没有缓存，这时候就往下执行。</p>
<h5 id="ip查找">ip查找</h5><p>获取域名所对应的ip地址</p>
<ul>
<li>浏览器缓存</li>
<li>本地缓存</li>
<li>路由器缓存</li>
<li>DNS服务器查找<br>经过这么多步骤，最终会获取到服务器的ip地址，我们要请求的服务就在那台机器上面。</li>
</ul>
<h5 id="发送Http请求">发送Http请求</h5><p>接着浏览器向服务器发送一个http请求，带着请求头和请求体<br>如果是http请求，客户端和服务端经过三次握手，第一次客户端向服务端发送一个包，第二次服务端收到包后响应已经收到包，并且发送给客户端一个包，第三次客户端接收到确认消息并且收到服务器发来的包，向服务器再发送一个确认包，发完后，客户端和服务器进入连接状态，完成了三次握手。<br>如果是https请求，还要多一个SSL层。</p>
<h5 id="永久重定向">永久重定向</h5><p>服务器返回301永久重定向地址 xuerlove.com 到 www.xuerlove.com，这一步是为了seo友好而做的，服务器可以判断为一级域名，给补全www,是为了让搜索引擎统计访问量的时候，都统计到一个地址上，有利于排名。</p>
<h5 id="跟踪重定向地址">跟踪重定向地址</h5><p>客户端继续向www.xuerlove.com发送一个同样的http请求</p>
<h5 id="服务器处理请求">服务器处理请求</h5><p>服务器接收到请求后根据请求头中的If-None-Match,If-Modified-Since去判断要返回的文件是否变更过，如果没有变更，则向浏览器返回304 not modify,浏览器接收到响应后会继续使用缓存的文件，然后更新Last-Modify，expires, max-age时间，接下来浏览器加载，解析，渲染等等。</p>
<h5 id="服务器返回请求结果">服务器返回请求结果</h5><p>如果服务器的文件修改过，服务器向浏览器返回页面结果，返回新的ETag和Last-Modify值，如果是动态页面，服务器会通过计算，生成最后要返回的文件。</p>
<h5 id="浏览器渲染Html">浏览器渲染Html</h5><p>浏览器加载页面，渲染DOM树</p>
<h5 id="请求页面资源">请求页面资源</h5><p>渲染的过程中遇到资源标签，会去请求各种资源，下载下来css后，会去生成CSSOM树，然后布局以及绘制。下载完js后会在domReady后会去执行js，脚本可能会动态处理页面。</p>
<h5 id="发送交互请求">发送交互请求</h5><p>js脚本中可能发起一些异步请求，然后去完成对页面的一些渲染。</p>
<h5 id="页面加载完成">页面加载完成</h5><p>一个完整的页面就处理完呈现出来了。</p>
]]></content>
    <summary type="html">
    <![CDATA[浏览器输入url后发生了什么]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[web页面分析]]></title>
    <link href="http://www.xuerlove.com/2017/02/19/web%E9%A1%B5%E9%9D%A2%E5%88%86%E6%9E%90/"/>
    <id>http://www.xuerlove.com/2017/02/19/web页面分析/</id>
    <published>2017-02-19T13:24:03.000Z</published>
    <updated>2017-02-20T12:15:06.000Z</updated>
    <content type="html"><![CDATA[<p>webapp在我们日常生活中随处可见，性能问题也是常常谈起，有一个好的性能分析工具，收集展示平台，能够辅助我们去优化我们的页面。今天介绍一个github上开源的webapp以及web页面的分析工具<a href="https://github.com/GoogleChrome/lighthouse" target="_blank" rel="external">Lighthouse</a>。<br>Lighthouse能够分析web app以及web页面，能够收集现代性能指标以及给出最佳实践的建议。</p>
<a id="more"></a>
<h4 id="环境要求">环境要求</h4><p>Chrome 56+<br>NodeJs 6+</p>
<h4 id="setup">setup</h4><p>npm install -g lighthouse</p>
<h4 id="use">use</h4><h5 id="输出到控制台">输出到控制台</h5><p>使用控制台收集展示页面新能信息:<br>lighthouse <a href="https://baidu.com/" target="_blank" rel="external">https://baidu.com/</a><br>会打开chrome进行性能分析，页面加载过程截图以及数据收集</p>
<h5 id="输出到文件">输出到文件</h5><p>lighthouse <a href="https://baidu.com" target="_blank" rel="external">https://baidu.com</a> –output-path=~/loginfo/foo.out –save-assets<br>会生成5个文件，包括性能分析的json数据文件，html展示页面，以及html截图文件等。</p>
<h5 id="chrome真机调试">chrome真机调试</h5><p>adb forward tcp:9222 localabstract:chrome_devtools_remote<br>lighthouse –disable-device-emulation –disable-cpu-throttling <a href="https://baidu.com/" target="_blank" rel="external">https://baidu.com/</a></p>
<h5 id="编写程序测试">编写程序测试</h5><p>使用nodejs编写程序进行真机测试<br>npm install lighthouse –save<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> Lighthouse = <span class="built_in">require</span>(<span class="string">'lighthouse'</span>);</div><div class="line"><span class="keyword">const</span> ChromeLauncher = <span class="built_in">require</span>(<span class="string">'lighthouse/lighthouse-cli/chrome-launcher.js'</span>).ChromeLauncher;</div><div class="line"><span class="keyword">const</span> Printer = <span class="built_in">require</span>(<span class="string">'lighthouse/lighthouse-cli/printer'</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">launchChromeAndRunLighthouse</span>(<span class="params">url, flags, config</span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> launcher = <span class="keyword">new</span> ChromeLauncher(&#123;<span class="attr">port</span>: <span class="number">9222</span>, <span class="attr">autoSelectChrome</span>: <span class="literal">true</span>&#125;);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> launcher.isDebuggerReady()</div><div class="line">    .catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> (flags.skipAutolaunch) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> launcher.run(); <span class="comment">// Launch Chrome.</span></div><div class="line">    &#125;)</div><div class="line">    .then(<span class="function"><span class="params">()</span> =&gt;</span> Lighthouse(url, flags, config)) <span class="comment">// Run Lighthouse.</span></div><div class="line">    .then(<span class="function"><span class="params">results</span> =&gt;</span> launcher.kill().then(<span class="function"><span class="params">()</span> =&gt;</span> results)) <span class="comment">// Kill Chrome and return results.</span></div><div class="line">    .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</div><div class="line">      <span class="comment">// Kill Chrome if there's an error.</span></div><div class="line">      <span class="keyword">return</span> launcher.kill().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">throw</span> err;</div><div class="line">      &#125;, <span class="built_in">console</span>.err);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Use an existing config or create a custom one.</span></div><div class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">'lighthouse/lighthouse-core/config/perf.json'</span>);</div><div class="line"><span class="keyword">const</span> url = <span class="string">'https://example.com'</span>;</div><div class="line"><span class="keyword">const</span> flags = &#123;<span class="attr">output</span>: <span class="string">'html'</span>&#125;;</div><div class="line"></div><div class="line">launchChromeAndRunLighthouse(url, flags, config).then(<span class="function"><span class="params">lighthouseResults</span> =&gt;</span> &#123;</div><div class="line">  lighthouseResults.artifacts = <span class="literal">undefined</span>; <span class="comment">// You can save the artifacts separately if so desired</span></div><div class="line">  <span class="keyword">return</span> Printer.write(lighthouseResults, flags.output);</div><div class="line">&#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="built_in">console</span>.error(err));</div></pre></td></tr></table></figure></p>
<p>获取页面评分<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getOverallScore</span>(<span class="params">lighthouseResults</span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> scoredAggregations = lighthouseResults.aggregations.filter(<span class="function"><span class="params">a</span> =&gt;</span> a.scored);</div><div class="line">  <span class="keyword">const</span> total = scoredAggregations.reduce(<span class="function">(<span class="params">sum, aggregation</span>) =&gt;</span> sum + aggregation.total, <span class="number">0</span>);</div><div class="line">  <span class="keyword">return</span> (total / scoredAggregations.length) * <span class="number">100</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="help">help</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">amos@ubuntu:~$ lighthouse --help</div><div class="line">lighthouse url</div><div class="line"></div><div class="line">Logging:</div><div class="line">  --verbose  Displays verbose logging                                  [boolean]</div><div class="line">  --quiet    Displays no progress, debug logs or errors                [boolean]</div><div class="line"></div><div class="line">Configuration:</div><div class="line">  --save-assets            Save the trace contents &amp; screenshots to disk</div><div class="line">                                                                       [boolean]</div><div class="line">  --save-artifacts         Save all gathered artifacts to disk         [boolean]</div><div class="line">  --list-all-audits        Prints a list of all available audits and exits</div><div class="line">                                                                       [boolean]</div><div class="line">  --list-trace-categories  Prints a list of all required trace categories and</div><div class="line">                           exits                                       [boolean]</div><div class="line">  --config-path            The path to the config JSON.</div><div class="line">  --perf                   Use a performance-test-only configuration   [boolean]</div><div class="line">  --port                   The port to use <span class="keyword">for</span> the debugging protocol. Use 0 <span class="keyword">for</span></div><div class="line">                           a random port                          [默认值: 9222]</div><div class="line"></div><div class="line">Output:</div><div class="line">  --output       Reporter <span class="keyword">for</span> the results</div><div class="line">                           [可选值: <span class="string">"pretty"</span>, <span class="string">"json"</span>, <span class="string">"html"</span>] [默认值: <span class="string">"pretty"</span>]</div><div class="line">  --output-path  The file path to output the results</div><div class="line">                 Example: --output-path=./lighthouse-results.html</div><div class="line">                                                              [默认值: <span class="string">"stdout"</span>]</div><div class="line"></div><div class="line">选项：</div><div class="line">  --help                        显示帮助信息                           [boolean]</div><div class="line">  --version                     显示版本号                             [boolean]</div><div class="line">  --disable-device-emulation    Disable Nexus 5X emulation             [boolean]</div><div class="line">  --disable-cpu-throttling      Disable CPU throttling  [boolean] [默认值: <span class="literal">true</span>]</div><div class="line">  --disable-network-throttling  Disable network throttling             [boolean]</div><div class="line">  --skip-autolaunch             Skip autolaunch of Chrome when already running</div><div class="line">                                instance is not found                  [boolean]</div><div class="line">  --select-chrome               Interactively choose version of Chrome to use</div><div class="line">                                when multiple installations are found  [boolean]</div><div class="line">  --interactive                 Open Lighthouse <span class="keyword">in</span> interactive mode    [boolean]</div></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[web页面分析]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[网站性能监控showslow]]></title>
    <link href="http://www.xuerlove.com/2017/02/09/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7showslow/"/>
    <id>http://www.xuerlove.com/2017/02/09/网站性能监控showslow/</id>
    <published>2017-02-09T06:33:53.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<p>今天，性能是一个我们常谈的话题，网站性能的重要性不言而喻。<br><a href="https://github.com/sergeychernyshev/showslow/wiki" target="_blank" rel="external">showslow</a>是一个github上开源的，能够帮助我们监控网站性能的工具。我们可以使用yslow和pagespeed等工具生成分析结果并以图表的方式展现出来。从而全面了解我们网站有哪些方面需要改进。</p>
<a id="more"></a>
<h4 id="环境">环境</h4><ul>
<li>安装PHP环境</li>
<li>安装apache服务器</li>
<li>安装mysql数据库</li>
</ul>
<h4 id="phantomjs">phantomjs</h4><p><a href="http://phantomjs.org/download.html" target="_blank" rel="external">安装phantomjs</a></p>
<h4 id="yslowjs">yslowjs</h4><p><a href="http://yslow.org/phantomjs/" target="_blank" rel="external">yslowjs</a><br>通过yslow分析页面，上报到showslow<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#phantomjs yslow.js http://www.test.com/ --info grade  -b http://127.0.0.1:8088/php/webapp/beacon/yslow/</span></div></pre></td></tr></table></figure></p>
<h4 id="phantomas">phantomas</h4><p>使用phantomas可以收集网络性能指标<br>安装: npm install –global phantomas<br>通过phantomas生成har<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">phantomas http://www.test.com/ --engine webkit --har <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p>读取har文件内容，通过接口 <a href="http://127.0.0.1:8088/php/webapp/beacon/har/?url=http://www.test.com/" target="_blank" rel="external">http://127.0.0.1:8088/php/webapp/beacon/har/?url=http://www.test.com/</a> 上传到showslow平台</p>
<h4 id="pagespeed">pagespeed</h4><p><a href="https://code.google.com/apis/console/#access" target="_blank" rel="external">申请apiKey</a><br>通过pagespeed分析页面，上报到showslow<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl http://127.0.0.1:8088/php/webapp/beacon/pagespeed/?api\&amp;u=http://www.test.com/</div></pre></td></tr></table></figure></p>
<h4 id="HARViewer安装">HARViewer安装</h4><p><a href="https://github.com/janodvarko/harviewer/archive/master.zip" target="_blank" rel="external">HARViewer</a>能够帮助我们</p>
<ul>
<li><a href="https://github.com/janodvarko/harviewer/archive/master.zip" target="_blank" rel="external">下载HARViewer</a></li>
<li>把解压的文件copy到showslow webapp目录下即可</li>
</ul>
<h4 id="showslow安装">showslow安装</h4><ul>
<li><a href="https://github.com/sergeychernyshev/showslow/releases" target="_blank" rel="external">下载showslow</a></li>
<li>把解压文件夹放到apache www目录下即可</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#unzip showslow</span></div><div class="line"><span class="comment">#cd showslow</span></div><div class="line"><span class="comment">#cp config.sample.php config.php</span></div><div class="line"><span class="comment">#vim config.php</span></div><div class="line"></div><div class="line">// 配置数据库</div><div class="line"><span class="variable">$db</span> = <span class="string">'showslow'</span>;</div><div class="line"><span class="variable">$user</span> = <span class="string">'xxx'</span>;</div><div class="line"><span class="variable">$pass</span> = <span class="string">'xxx'</span>;</div><div class="line"><span class="variable">$host</span> = <span class="string">'localhost'</span>;</div><div class="line"><span class="variable">$port</span> = 3306;</div><div class="line"></div><div class="line">// pagespeed测试key</div><div class="line"><span class="variable">$pageSpeedOnlineAPIKey</span> = <span class="string">'xxx'</span>;</div><div class="line"></div><div class="line">// 配置har存储</div><div class="line"><span class="variable">$enableHARBeacon</span> = <span class="literal">true</span>;</div><div class="line"></div><div class="line">// 配置harview目录</div><div class="line"><span class="variable">$HARViewerBase</span> = <span class="string">'/php/webapp/harviewer/webapp'</span>;</div><div class="line"></div><div class="line"><span class="comment">#vim global.php</span></div><div class="line"></div><div class="line">// 在页面中配置需要监控测试的页面</div><div class="line"><span class="variable">$enableMyURLs</span> = <span class="literal">true</span>;</div><div class="line"></div><div class="line"><span class="comment">#make</span></div></pre></td></tr></table></figure>
<p>这样我们就能在页面添加要监控的网站了</p>
<h4 id="使用">使用</h4><p>可以编写脚本，每天定时去执行检测，获取所有监控的url，然后分别去执行上述的那些方法，进行检测和上报的showslow</p>
]]></content>
    <summary type="html">
    <![CDATA[网站性能监控showslow]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[实现发送邮件功能]]></title>
    <link href="http://www.xuerlove.com/2017/02/09/%E5%AE%9E%E7%8E%B0%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.xuerlove.com/2017/02/09/实现发送邮件功能/</id>
    <published>2017-02-09T03:00:12.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<p>日常开发中，我们经常会有发送邮件的需求，无论是发送代码中的异常或者错误信息，还是发送一些网站数据，下面我们就动手去实现一下这个功能。</p>
<a id="more"></a>
<h5 id="nodejs">nodejs</h5><p>以发送163邮箱为例，使用nodemailer模块，这里用的版本是0.7.1，最新版本的参数稍有变更，请自行<a href="https://github.com/nodemailer/nodemailer" target="_blank" rel="external">前往</a>查看<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// "nodemailer": "0.7.1"</span></div><div class="line"><span class="keyword">import</span> nodemailer <span class="keyword">from</span> <span class="string">'nodemailer'</span>;</div><div class="line"></div><div class="line"><span class="keyword">let</span> smtpTransport = nodemailer.createTransport(<span class="string">"SMTP"</span>, &#123;</div><div class="line">  <span class="attr">host</span>: <span class="string">"smtp.163.com"</span>,</div><div class="line">  <span class="attr">secureConnection</span>: <span class="literal">true</span>,</div><div class="line">  <span class="attr">port</span>: <span class="number">465</span>,</div><div class="line">  <span class="attr">auth</span>: &#123;</div><div class="line">    <span class="attr">user</span>: <span class="string">"test@163.com"</span>,</div><div class="line">    <span class="attr">pass</span>: <span class="string">"test"</span> <span class="comment">// 使用客户端授权密码，在邮件设置中可以获取到</span></div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">let</span> mailOptionsDefault = &#123;</div><div class="line">  <span class="attr">from</span>: <span class="string">"test &lt;test@163.com&gt;"</span>,</div><div class="line">  <span class="attr">to</span>: <span class="string">"test@test.com"</span>,</div><div class="line">  <span class="attr">subject</span>: <span class="string">"test"</span>,</div><div class="line">  <span class="attr">text</span>: <span class="string">"test"</span>,</div><div class="line">  <span class="attr">html</span>: <span class="string">"test"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendEmail</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  smtpTransport.sendMail(mailOptionsDefault, (error, response) =&gt; &#123;</div><div class="line">    <span class="keyword">if</span>(error)&#123;</div><div class="line">      <span class="built_in">console</span>.log(error);</div><div class="line">    &#125; <span class="keyword">else</span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">"Message sent: "</span> + response.message);</div><div class="line">    &#125;</div><div class="line">    smtpTransport.close();</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">export</span> &#123;</div><div class="line">  sendEmail</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="python">python</h5><p>以发送163邮箱为例<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> smtplib </div><div class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendMail</span><span class="params">(text)</span>:</span></div><div class="line">    sender = <span class="string">'test@163.com'</span>  </div><div class="line">    receiver = [<span class="string">'test@163.com'</span>]</div><div class="line">    mailToCc = []</div><div class="line">    subject = <span class="string">'[test]'</span>  </div><div class="line">    smtpserver = <span class="string">'smtp.163.com'</span>  </div><div class="line">    username = <span class="string">'test@163.com'</span>  </div><div class="line">    password = <span class="string">'test'</span>  // 使用客户端授权密码，在邮件设置中可以获取到</div><div class="line">    </div><div class="line">    msg = MIMEText(text, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)      </div><div class="line">    msg[<span class="string">'Subject'</span>] = subject  </div><div class="line">    msg[<span class="string">'From'</span>] = sender</div><div class="line">    msg[<span class="string">'To'</span>] = <span class="string">';'</span>.join(receiver)</div><div class="line">    msg[<span class="string">'Cc'</span>] = <span class="string">';'</span>.join(mailToCc)</div><div class="line">    smtp = smtplib.SMTP_SSL(<span class="string">'smtp.163.com'</span>, <span class="number">465</span>)  </div><div class="line">    smtp.connect(smtpserver)  </div><div class="line">    smtp.login(username, password)  </div><div class="line">    smtp.sendmail(sender, receiver + mailToCc, msg.as_string())  </div><div class="line">    smtp.quit() </div><div class="line"></div><div class="line">sendMail(<span class="string">'test'</span>)</div></pre></td></tr></table></figure></p>
<h5 id="html">html</h5><p>简单的打开邮箱客户端，自动填充收件人<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"Mailto:wuzhuo0425@163.com"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>稍微复杂一些的，内容更丰富的发送方式<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"Mailto:wuzhuo0425@163.com?CC=test@163.com&amp;BCC=test@163.com&amp;Subject=Hello&amp;Body=world"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[代码实现发送邮件功能]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端笔试题集]]></title>
    <link href="http://www.xuerlove.com/2017/02/07/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AF%95%E9%A2%98%E9%9B%86/"/>
    <id>http://www.xuerlove.com/2017/02/07/前端笔试题集/</id>
    <published>2017-02-07T08:25:43.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<h4 id="笔试题集">笔试题集</h4><h5 id="viewport禁止页面放大">viewport禁止页面放大</h5><p>通过设置页面meta标签viewport的值，可以设置页面的宽高度以及缩放行为</p>
<ul>
<li>initial-scale  设置页面初始缩放比例<br>＊ minimum-scale 设置缩放最小比例<br>＊ maximum-scale 设置缩放最大比例<br>＊ user-scalable 设置用户是否可以用手控制缩放<br>通过设置 initial-scale=1 user-scalable=no 或者 initial-scale=1 maximum-scale=1 禁止用户放大或者缩小网页。</li>
</ul>
<a id="more"></a>
<h5 id="data-*_属性的作用">data-* 属性的作用</h5><p>使用 data-<em> 可以嵌入自定义数据，可以存储页面或者应用程序的私有自定义数据，使得html元素可以嵌入数据。可以通过javascript设置和获取data-</em>的数据。data-*的属性必须以data开头，不能包含大写字母的任意字符串。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span> <span class="attr">data-val</span>=<span class="string">"ddd"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> test = <span class="built_in">document</span>.getElementById(<span class="string">'test'</span>);</div><div class="line"><span class="built_in">console</span>.log(test.dataset.val);</div><div class="line">test.dataset.val = <span class="string">'eee'</span>;</div><div class="line"><span class="built_in">console</span>.log(test.dataset.val);</div></pre></td></tr></table></figure>
<h5 id="cookie_sessionStorage_localStorage">cookie sessionStorage localStorage</h5><ul>
<li>cookie:<br>存储在浏览器中，有域名和path的限制，在所有同源窗口中共享，可以设置过期时间，默认是浏览器关闭失效，存储大小最大4k，cookie的值会随每次http的请求进行传输，所以cookie应该尽量少而且精简，不至于影响网页性能，通常用来存储一些用户登录信息等，应该做好加密工作，不要存储一些太过机密的数据。原生接口不太友好，二次封装后用起来更方便。</li>
<li>localStorage<br>存储在浏览器中，有域名限制，在所有同源窗口中共享，不能设置过期时间(可以自己通过数据去控制),永久有效，存储大小最大5M, 值不会随http传输携带，可以存储一些本地数据，在性能优化，数据缓存上都可以使用，不要存储机密数据，防止隐私泄漏，xss攻击等。原生接口支持的比较好，但是可以封装让其对对象数组支持的更好。<br>老版本ie浏览器不支持改属性，可以使用store.js，通过userData进行兼容处理过了。</li>
<li>sessionStorage<br>存储在浏览器中，有域名和窗口的限制，不同浏览器窗口同源也不共享，不可以设置过期时间，仅在当前会话下有效，关闭页面或者关闭浏览器都会被清除，存储大小最大5M，可以存储一些页面的临时数据，或者页面运行期间的一些流程控制，值不会随http传输携带，不要存储机密数据，防止隐私泄漏，xss攻击等。原生接口支持的比较好，但是可以封装让其对对象数组支持的更好。</li>
</ul>
<h5 id="浏览器的标准模式，怪异模式">浏览器的标准模式，怪异模式</h5><p>HTML和CSS标准完成之前，各个浏览器对HTML和CSS的解析有各自不同的实现，很多旧的网页是按照非标准去设计实现的，在标准形成之后，为了向后兼容，所以现代浏览器都会有两种渲染模式，标准模式和怪异模式。具体使用哪种渲染模式，通过DOCTYPE去区分，当浏览器遇到正确的DOCTYPE的时候，就用标准模式渲染，遇到错误的DOCTYPE或者没有DOCTYPE声明的，则使用怪异模式渲染。</p>
<ul>
<li>盒模型差异<br>标准模式下CSS盒模型宽高不包含内边距和边框<br>怪异模式下CSS盒模型宽高包含内边距和边框<br>＊ 行内元素垂直对齐<br>标准模式下将会对齐到盒内文本的基线，怪异模式下对齐到底部。</li>
</ul>
<h5 id="盒模型宽高|box-sizing">盒模型宽高|box-sizing</h5><ul>
<li>标准模式下<br>盒子总宽度 = width + padding + border + margin</li>
<li>怪异模式下<br>内容宽度包含 content + padding + border<br>盒子总宽度 = width + margin</li>
<li>box-sizing<br>content-box : 采用标准模式解析计算(默认值)<br>border-box : 采用怪异模式解析计算</li>
</ul>
<h5 id="函数中arguments">函数中arguments</h5><p>arguments是一个对象，该对象的属性值是从0-n的数字，所以访问的时候可以像数组那样访问，但它却不是数组，它还拥有length属性，返回的是属性的长度，callee属性返回的是正在被执行的function,可以在递归调用时使用,caller属性返回的是对函数的引用，该函数调用了当前函数。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 使用Array对象的方法可以将arguments转换成数组</span></div><div class="line"><span class="keyword">var</span> argsArr = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</div></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[前端笔试题集大全]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux下创建服务]]></title>
    <link href="http://www.xuerlove.com/2017/02/07/linux%E4%B8%8B%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.xuerlove.com/2017/02/07/linux下创建服务/</id>
    <published>2017-02-07T05:42:57.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<h4 id="概述">概述</h4><p>我们通过在 /etc/init.d/ 目录下创建bash脚本，实现自定义服务，通过service命令，能够调用服务中的方法，通常一个服务存在 start stop restart status方法。<br><a id="more"></a></p>
<h4 id="例如">例如</h4><p>test<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment"># chkconfig: 2345 20 81</span></div><div class="line"><span class="comment"># description: test</span></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line">  start)</div><div class="line">  <span class="built_in">echo</span> -n <span class="string">"starting test:"</span></div><div class="line">  <span class="built_in">echo</span> <span class="string">"OK"</span></div><div class="line">  ;;</div><div class="line">  stop)</div><div class="line">  <span class="built_in">echo</span> -n <span class="string">"shutdown test:"</span></div><div class="line">  <span class="built_in">echo</span> <span class="string">"OK"</span></div><div class="line">  ;;</div><div class="line">  status)</div><div class="line">  <span class="built_in">echo</span> <span class="string">"test instance is running..."</span></div><div class="line">  ;;</div><div class="line">  restart)</div><div class="line">  <span class="variable">$0</span> stop</div><div class="line">  <span class="variable">$0</span> start</div><div class="line">  ;;</div><div class="line">  *)</div><div class="line">  <span class="built_in">echo</span> <span class="string">"Usage:`basename <span class="variable">$0</span>` start|stop|status|restart"</span></div><div class="line"><span class="keyword">esac</span></div><div class="line"><span class="built_in">exit</span> $?</div></pre></td></tr></table></figure></p>
<p>我们在 /etc/init.d/ 下面添加 test 脚本，然后给文件权限 sudo chmod -R 755, 之后我们就能够通过 </p>
<ul>
<li>sudo service start </li>
<li>sudo service stop </li>
<li>sudo service restart </li>
<li>sudo service status </li>
<li>sudo service<br>这些命令去调用我们的服务了</li>
</ul>
<h4 id="加入开机启动_chkconfig">加入开机启动 chkconfig</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">usage:   chkconfig [--list] [--type &lt;<span class="built_in">type</span>&gt;] [name]</div><div class="line">         chkconfig --add &lt;name&gt;</div><div class="line">         chkconfig --del &lt;name&gt;</div><div class="line">         chkconfig --override &lt;name&gt;</div><div class="line">         chkconfig [--level &lt;levels&gt;] [--type &lt;<span class="built_in">type</span>&gt;] &lt;name&gt; &lt;on|off|reset|resetpriorities&gt;</div></pre></td></tr></table></figure>
<p>sudo chkconfig –add test<br>sudo chkconfig test on</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="概述">概述</h4><p>我们通过在 /etc/init.d/ 目录下创建bash脚本，实现自定义服务，通过service命令，能够调用服务中的方法，通常一个服务存在 start stop restart status方法。<br>]]>
    
    </summary>
    
      <category term="linux" scheme="http://www.xuerlove.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[微信小程序开发]]></title>
    <link href="http://www.xuerlove.com/2016/11/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    <id>http://www.xuerlove.com/2016/11/03/微信小程序开发/</id>
    <published>2016-11-03T11:17:42.000Z</published>
    <updated>2017-02-17T06:15:18.000Z</updated>
    <content type="html"><![CDATA[<h5 id="准备">准备</h5><ul>
<li>开发环境<ul>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html" target="_blank" rel="external">下载开发工具</a></li>
<li><a href="https://github.com/gavinkwoe/weapp-ide-crack" target="_blank" rel="external">按照网上教程破解</a></li>
<li>或者直接下载破解好的包</li>
</ul>
</li>
<li>学习资料<ul>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/" target="_blank" rel="external">学习资料</a></li>
</ul>
</li>
</ul>
<a id="more"></a>
<h5 id="开始">开始</h5><ul>
<li>打开微信web开发者工具</li>
<li>AppID选择 无AppID 或者 随便写一个(破解后)</li>
<li>项目名称随便写</li>
<li>开发目录选择一个空的文件夹</li>
</ul>
<h5 id="项目目录">项目目录</h5><ul>
<li>文件<ul>
<li>app.js 必须 项目的主文件 小程序的逻辑</li>
<li>app.json 必须 小程序的公共设置</li>
<li>app.wxss 非必须 存放小程序的公共样式</li>
<li>各个文件编写规范以及配置的意义资料中讲的很详细,就不重新描述了。</li>
</ul>
</li>
<li>开发<br>这个小应用中调用了一些wx的组件以及API,实现了一个列表的下拉刷新，上拉加载，每一项的左划菜单(删除，收藏等),开发时间有限，实现的比较粗糙，主要是为了把小程序开发这一套走一遍，知道小程序想干什么，能干什么，怎么干。下面只贴了部分代码。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// app.js</span></div><div class="line">App(&#123;</div><div class="line">  <span class="attr">onLaunch</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'App Launch'</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">onShow</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'App Show'</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">onHide</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'App Hide'</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">globalData</span>: &#123;</div><div class="line">    <span class="attr">userInfo</span>: <span class="literal">false</span>,</div><div class="line">    <span class="attr">nightMode</span>: <span class="literal">false</span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// app.json</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"pages"</span>: [</div><div class="line">    <span class="string">"page/component/index/index"</span>,</div><div class="line">    <span class="string">"page/component/pic/pic"</span>,</div><div class="line">    <span class="string">"page/component/fav/fav"</span>,</div><div class="line">    <span class="string">"page/component/about/about"</span></div><div class="line">  ],</div><div class="line">  <span class="string">"window"</span>: &#123;</div><div class="line">    <span class="string">"navigationBarTextStyle"</span>: <span class="string">"white"</span>,</div><div class="line">    <span class="string">"navigationBarTitleText"</span>: <span class="string">"Jokes"</span>,</div><div class="line">    <span class="string">"navigationBarBackgroundColor"</span>: <span class="string">"#353336"</span>,</div><div class="line">    <span class="string">"backgroundColor"</span>: <span class="string">"#353336"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"tabBar"</span>: &#123;</div><div class="line">    <span class="string">"color"</span>: <span class="string">"#000000"</span>,</div><div class="line">    <span class="string">"selectedColor"</span>: <span class="string">"#ffffff"</span>,</div><div class="line">    <span class="string">"borderStyle"</span>: <span class="string">"black"</span>,</div><div class="line">    <span class="string">"backgroundColor"</span>: <span class="string">"#413f40"</span>,</div><div class="line">    <span class="string">"list"</span>: [&#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"page/component/index/index"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"image/icon_jokes_default.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"image/icon_jokes_active.png"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"Jokes"</span></div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"page/component/pic/pic"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"image/icon_pic_default.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"image/icon_pic_active.png"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"Jokes"</span></div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"page/component/fav/fav"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"image/icon_fav_default.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"image/icon_fav_active.png"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"fav"</span></div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="string">"pagePath"</span>: <span class="string">"page/component/about/about"</span>,</div><div class="line">      <span class="string">"iconPath"</span>: <span class="string">"image/icon_settings_default.png"</span>,</div><div class="line">      <span class="string">"selectedIconPath"</span>: <span class="string">"image/icon_settings_active.png"</span>,</div><div class="line">      <span class="string">"text"</span>: <span class="string">"Settings"</span></div><div class="line">    &#125;]</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"networkTimeout"</span>: &#123;</div><div class="line">    <span class="string">"request"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"connectSocket"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"uploadFile"</span>: <span class="number">10000</span>,</div><div class="line">    <span class="string">"downloadFile"</span>: <span class="number">10000</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"debug"</span>: <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// app.wxss</div><div class="line">page &#123;</div><div class="line">  background-color: #fbf9fe;</div><div class="line">  height: 100%;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// page/component/index/index.js</span></div><div class="line"><span class="keyword">var</span> jodeData,startX,startY,endX,endY,moveStart,</div><div class="line">    topAdImgs = [</div><div class="line">        <span class="string">'../../../image/ad/1.jpg'</span>,</div><div class="line">        <span class="string">'../../../image/ad/2.jpg'</span>,</div><div class="line">        <span class="string">'../../../image/ad/3.jpg'</span>,</div><div class="line">        <span class="string">'../../../image/ad/4.jpg'</span>,</div><div class="line">        <span class="string">'../../../image/ad/5.jpg'</span></div><div class="line">    ];</div><div class="line"></div><div class="line">Page(&#123;</div><div class="line">  <span class="attr">data</span>: &#123;</div><div class="line">    <span class="attr">list</span>: [],</div><div class="line">    <span class="attr">itemToView</span>: <span class="string">''</span>,</div><div class="line">    <span class="attr">scrollTop</span>: <span class="number">0</span>,</div><div class="line">    <span class="attr">currentPage</span>: <span class="number">1</span>,</div><div class="line">    <span class="attr">bottomHidden</span>: <span class="string">'none'</span>,</div><div class="line">    <span class="attr">modalHidden</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">modalText</span>: <span class="string">''</span>,</div><div class="line">    <span class="attr">topImages</span>:topAdImgs,</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">colorMap</span>: [<span class="string">'#86a3c1'</span>,<span class="string">'#86d1cc'</span>,<span class="string">'#bdd4e4'</span>,<span class="string">'#debf88'</span>,<span class="string">'#f9af02'</span>],</div><div class="line">  <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span>(<span class="params">html</span>) </span>&#123;</div><div class="line">    html = html.replace(<span class="regexp">/(&lt;p&gt;)|(&lt;\/p&gt;)|(\t)|(&amp;nbsp;)/gm</span>, <span class="string">""</span>);</div><div class="line">    <span class="keyword">return</span> html;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">prefixData</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">var</span> favJokes = wx.getStorageSync(<span class="string">'favJokes'</span>) || [];</div><div class="line">    data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</div><div class="line">      item.ct = item.ct.substr(<span class="number">0</span>,<span class="number">19</span>);</div><div class="line">      <span class="keyword">if</span>(item.type === <span class="number">1</span>)&#123;</div><div class="line">        item.text = self.parse(item.text);  </div><div class="line">      &#125;</div><div class="line">      item.background = self.colorMap[index%<span class="number">5</span>];</div><div class="line">      item.right = <span class="string">'0%'</span>;</div><div class="line">      item.hidden = <span class="string">'block'</span>;</div><div class="line">      item.hasFav = <span class="string">'none'</span>;</div><div class="line">      favJokes.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">fitem,findex</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(fitem.id === item.id)&#123;</div><div class="line">          item.hasFav = <span class="string">'block'</span>;</div><div class="line">        &#125;</div><div class="line">      &#125;);</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">return</span> data;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">onLoad</span>: <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line">    wx.request(&#123;</div><div class="line">      <span class="attr">url</span>: <span class="string">'https://123.test.com/joke_text?page='</span> + self.data.currentPage,</div><div class="line">      <span class="attr">data</span>: &#123;&#125;,</div><div class="line">      <span class="attr">header</span>: &#123;</div><div class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></div><div class="line">      &#125;,</div><div class="line">      <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> data = res.data;</div><div class="line">        data = self.prefixData(data);</div><div class="line">        self.setData(&#123;</div><div class="line">          <span class="attr">bottomHidden</span>: <span class="string">'none'</span></div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">if</span>(self.data.currentPage === <span class="number">1</span>)&#123;</div><div class="line">          self.setData(&#123;</div><div class="line">            <span class="attr">list</span>: data</div><div class="line">          &#125;);</div><div class="line">          self.toPos(self.data.currentPage);  </div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">          data = self.data.list.concat(data);</div><div class="line">          self.setData(&#123;</div><div class="line">            <span class="attr">list</span>: data</div><div class="line">          &#125;);</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        self.setData(&#123;</div><div class="line">          <span class="attr">bottomHidden</span>: <span class="string">'none'</span></div><div class="line">        &#125;);</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">toPos</span>: <span class="function"><span class="keyword">function</span>(<span class="params">page</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      self.setData(&#123;</div><div class="line">        <span class="attr">itemToView</span>: <span class="string">'item'</span> + (page<span class="number">-1</span>) * <span class="number">20</span></div><div class="line">      &#125;);</div><div class="line">    &#125;,<span class="number">1000</span>);</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">reDealData</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> allJodes = <span class="keyword">this</span>.data.list;</div><div class="line">    <span class="keyword">var</span> favJokes = wx.getStorageSync(<span class="string">'favJokes'</span>) || [];</div><div class="line">    allJodes.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</div><div class="line">      item.hasFav = <span class="string">'none'</span>;</div><div class="line">      favJokes.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">fitem,findex</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(fitem.id === item.id)&#123;</div><div class="line">          item.hasFav = <span class="string">'block'</span>;</div><div class="line">        &#125;</div><div class="line">      &#125;);</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">this</span>.setData(&#123;</div><div class="line">      <span class="attr">list</span>: allJodes</div><div class="line">    &#125;);</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">onShow</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.reDealData();</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">topUpdate</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.setData(&#123;</div><div class="line">      <span class="attr">currentPage</span>: <span class="number">1</span>,</div><div class="line">      <span class="attr">itemToView</span>: <span class="string">'top'</span></div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">this</span>.onLoad();</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">bottomLoad</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> page = <span class="keyword">this</span>.data.currentPage;</div><div class="line">    page = page + <span class="number">1</span>;</div><div class="line">    <span class="keyword">this</span>.setData(&#123;</div><div class="line">      <span class="attr">bottomHidden</span>: <span class="string">'block'</span>,</div><div class="line">      <span class="attr">currentPage</span>: page</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">this</span>.onLoad();</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">itemScroll</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">itemClick</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">    <span class="comment">// wx.navigationTo(&#123;url:""&#125;);</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">itemStart</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> touch = event.touches[<span class="number">0</span>];</div><div class="line">    startX = touch.clientX;</div><div class="line">    startY = touch.clientY;</div><div class="line">    moveStart = <span class="literal">true</span>;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">itemMove</span>: <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">var</span> dataIndex = event.currentTarget.dataset.idx;</div><div class="line">    jodeData = <span class="keyword">this</span>.data.list;</div><div class="line">    <span class="keyword">if</span>(moveStart)&#123;</div><div class="line">      <span class="keyword">var</span> touch = event.touches[<span class="number">0</span>];</div><div class="line">      endX = touch.clientX;</div><div class="line">      endY = touch.clientY;</div><div class="line">      <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(startX - endX) &gt;= <span class="built_in">Math</span>.abs(startY - endY))&#123;</div><div class="line">        <span class="keyword">if</span>(endX - startX &lt;= <span class="number">-5</span>)&#123;</div><div class="line">          jodeData.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</div><div class="line">            item.right = <span class="string">'0%'</span>;</div><div class="line">          &#125;);</div><div class="line">          jodeData[dataIndex].right = <span class="string">"20%"</span>;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">          jodeData.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</div><div class="line">            item.right = <span class="string">'0%'</span>;</div><div class="line">          &#125;);</div><div class="line">        &#125;</div><div class="line">        self.setData(&#123;</div><div class="line">          <span class="attr">list</span>: jodeData</div><div class="line">        &#125;);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    moveStart = <span class="literal">false</span>;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">modalChange</span>:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.setData(&#123;</div><div class="line">      <span class="attr">modalHidden</span>: <span class="literal">true</span>,</div><div class="line">      <span class="attr">modalText</span>: <span class="string">''</span></div><div class="line">    &#125;)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">tapFav</span>:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> dataIndex = event.currentTarget.dataset.idx;</div><div class="line">    <span class="keyword">var</span> allJodes = <span class="keyword">this</span>.data.list;</div><div class="line">    <span class="keyword">var</span> curJokes = allJodes[dataIndex];</div><div class="line">    curJokes.right = <span class="string">'0%'</span>;</div><div class="line">    <span class="keyword">var</span> favJokes = wx.getStorageSync(<span class="string">'favJokes'</span>) || [];</div><div class="line">    <span class="keyword">if</span>(curJokes.hasFav !== <span class="string">'block'</span>)&#123;</div><div class="line">      curJokes.hasFav = <span class="string">'block'</span>;</div><div class="line">      favJokes.unshift(curJokes);</div><div class="line">      wx.setStorageSync(<span class="string">'favJokes'</span>, favJokes);</div><div class="line">      <span class="keyword">this</span>.setData(&#123;</div><div class="line">        <span class="attr">list</span>: allJodes</div><div class="line">      &#125;);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">      <span class="keyword">this</span>.setData(&#123;</div><div class="line">        <span class="attr">list</span>: allJodes,</div><div class="line">        <span class="attr">modalHidden</span>: <span class="literal">false</span>,</div><div class="line">        <span class="attr">modalText</span>: <span class="string">'添加过了'</span></div><div class="line">      &#125;);</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">tapDel</span>:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> dataIndex = event.currentTarget.dataset.idx;</div><div class="line">    <span class="keyword">var</span> allJodes = <span class="keyword">this</span>.data.list;</div><div class="line">    <span class="keyword">var</span> curJokes = allJodes[dataIndex];</div><div class="line">    curJokes.right = <span class="string">'0%'</span>;</div><div class="line">    curJokes.hidden = <span class="string">'none'</span>;</div><div class="line">    <span class="keyword">this</span>.setData(&#123;</div><div class="line">      <span class="attr">list</span>: allJodes</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">// page/component/index/index.wxml</div><div class="line"><span class="tag">&lt;<span class="name">modal</span> <span class="attr">class</span>=<span class="string">"modal"</span> <span class="attr">hidden</span>=<span class="string">"&#123;&#123;modalHidden&#125;&#125;"</span> </span></div><div class="line">    <span class="attr">no-cancel</span> <span class="attr">bindconfirm</span>=<span class="string">"modalChange"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span> &#123;&#123;modalText&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">modal</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"index"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"body"</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">swiper</span> <span class="attr">class</span>=<span class="string">"top-swiper"</span> <span class="attr">indicator-dots</span>=<span class="string">"true"</span></span></div><div class="line">		  <span class="attr">autoplay</span>=<span class="string">"true"</span> <span class="attr">interval</span>=<span class="string">"5000"</span> <span class="attr">duration</span>=<span class="string">"1000"</span>&gt;</div><div class="line">		  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;topImages&#125;&#125;"</span>&gt;</span></div><div class="line">		    <span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></div><div class="line">		      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;item&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"slide-image"</span>/&gt;</span></div><div class="line">		    <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">"scroll-view"</span> </span></div><div class="line">    	    <span class="attr">scroll-y</span>=<span class="string">"true"</span> <span class="attr">bindscrolltoupper</span>=<span class="string">"topUpdate"</span></div><div class="line">    	    <span class="attr">bindscrolltolower</span>=<span class="string">"bottomLoad"</span> <span class="attr">bindscroll</span>=<span class="string">"itemScroll"</span> </div><div class="line">    	    <span class="attr">scroll-into-view</span>=<span class="string">"&#123;&#123;itemToView&#125;&#125;"</span> </div><div class="line">    	    <span class="attr">scroll-top</span>=<span class="string">"&#123;&#123;scrollTop&#125;&#125;"</span> </div><div class="line">    	    <span class="attr">upper-threshold</span>=<span class="string">"20"</span> </div><div class="line">    	    <span class="attr">lower-threshold</span>=<span class="string">"30"</span>&gt;</div><div class="line">	    	<span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"list-container"</span>&gt;</span></div><div class="line">	    		<span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">"top"</span> <span class="attr">class</span>=<span class="string">"pull-update"</span>&gt;</span></div><div class="line">	    			正在更新</div><div class="line">            <span class="tag">&lt;<span class="name">image</span> <span class="attr">style</span>=<span class="string">"width: 30rpx; height: 30rpx;margin-left:10rpx;"</span> </span></div><div class="line">		            <span class="attr">mode</span>=<span class="string">"scaleToFill"</span> <span class="attr">src</span>=<span class="string">"../../../image/loading.gif"</span>&gt;<span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line">	    		<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">		    	<span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;list&#125;&#125;"</span>&gt;</span></div><div class="line">		        <span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">"item&#123;&#123;index&#125;&#125;"</span> <span class="attr">data-idx</span>=<span class="string">"&#123;&#123;index&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"item"</span></span></div><div class="line">		            <span class="attr">style</span>=<span class="string">"background:&#123;&#123;item.background&#125;&#125;;right:&#123;&#123;item.right&#125;&#125;;display:&#123;&#123;item.hidden&#125;&#125;;"</span> </div><div class="line">		            <span class="attr">bindtap</span>=<span class="string">"itemClick"</span> <span class="attr">bindtouchstart</span>=<span class="string">"itemStart"</span> <span class="attr">bindtouchmove</span>=<span class="string">"itemMove"</span>&gt;</div><div class="line">		        	<span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"info-container"</span>&gt;</span></div><div class="line">			          <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"date"</span>&gt;</span></div><div class="line">			          	&#123;&#123;item.ct&#125;&#125;</div><div class="line">			          <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  			        <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;item.type == 1&#125;&#125;"</span>&gt;</span></div><div class="line">  						    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">  			          	&#123;&#123;item.text&#125;&#125;</div><div class="line">  			          <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  					    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></div><div class="line">  					    <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:else</span>&gt;</span></div><div class="line">  					  	  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">  				          	<span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"img-info"</span> <span class="attr">mode</span>=<span class="string">"aspectFit"</span> </span></div><div class="line">  				          	    <span class="attr">src</span>=<span class="string">"&#123;&#123;item.img&#125;&#125;"</span>&gt;<span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line">  				          <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  				          <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></div><div class="line">  				          	&#123;&#123;item.title&#125;&#125;</div><div class="line">  				          <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  					    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></div><div class="line">  			      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">		          <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"fav-icon"</span> <span class="attr">mode</span>=<span class="string">"scaleToFill"</span> </span></div><div class="line">		            <span class="attr">src</span>=<span class="string">"../../../image/fav.png"</span> <span class="attr">style</span>=<span class="string">"display:&#123;&#123;item.hasFav&#125;&#125;"</span>&gt;<span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line">        	    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"opt-item opt-fav"</span> <span class="attr">catchtap</span>=<span class="string">"tapFav"</span> <span class="attr">data-idx</span>=<span class="string">"&#123;&#123;index&#125;&#125;"</span>&gt;</span>喜欢<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">        	    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"opt-item opt-del"</span> <span class="attr">catchtap</span>=<span class="string">"tapDel"</span> <span class="attr">data-idx</span>=<span class="string">"&#123;&#123;index&#125;&#125;"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">		        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">			    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></div><div class="line">			    <span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">"bottom"</span> <span class="attr">class</span>=<span class="string">"pull-load"</span> <span class="attr">style</span>=<span class="string">"display:&#123;&#123;bottomHidden&#125;&#125;;"</span>&gt;</span></div><div class="line">	    			正在加载</div><div class="line">            <span class="tag">&lt;<span class="name">image</span> <span class="attr">style</span>=<span class="string">"width: 30rpx; height: 30rpx;margin-left:10rpx;"</span></span></div><div class="line">	    			            <span class="attr">mode</span>=<span class="string">"scaleToFill"</span> <span class="attr">src</span>=<span class="string">"../../../image/loading.gif"</span>&gt;<span class="tag">&lt;/<span class="name">image</span>&gt;</span></div><div class="line">	    		<span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// page/component/index/index.wxss</span></div><div class="line">@<span class="keyword">import</span> <span class="string">'../../common/wxss/base.wxss'</span>;</div><div class="line">@<span class="keyword">import</span> <span class="string">'../../common/wxss/common.wxss'</span>;</div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// page/common/wxss/base.wxss</div><div class="line">.index&#123;</div><div class="line">    background-color: #FBF9FE;</div><div class="line">    font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;</div><div class="line">    flex: 1;</div><div class="line">    min-height: 100%;</div><div class="line">    font-size: 32rpx;</div><div class="line">&#125;</div><div class="line">.body&#123;</div><div class="line">    overflow: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line">// page/common/wxss/common.wxss</div><div class="line">.top-swiper&#123;</div><div class="line">    height: 300rpx;</div><div class="line">    width: 100%;</div><div class="line">&#125;</div><div class="line">.slide-image&#123;</div><div class="line">    height: 300rpx;</div><div class="line">    width: 100%;</div><div class="line">&#125;</div><div class="line">.scroll-view&#123;</div><div class="line">    height: 860rpx;</div><div class="line">&#125;</div><div class="line">.pic-view&#123;</div><div class="line">    height: 1160rpx;</div><div class="line">&#125;</div><div class="line">.list-container&#123;</div><div class="line">    margin: 40rpx 0;</div><div class="line">&#125;</div><div class="line">.pull-update&#123;</div><div class="line">    text-align: center;</div><div class="line">    height: 40rpx;</div><div class="line">    line-height: 40rpx;</div><div class="line">    margin-top: -40rpx;</div><div class="line">&#125;</div><div class="line">.pull-load&#123;</div><div class="line">    text-align: center;</div><div class="line">    height: 40rpx;</div><div class="line">    line-height: 40rpx;</div><div class="line">&#125;</div><div class="line">.item&#123;</div><div class="line">    position: relative;</div><div class="line">    display: block;</div><div class="line">    width: 100%;</div><div class="line">  text-align: left;</div><div class="line">  vertical-align: middle;</div><div class="line">  background-color: #fff;</div><div class="line">    border-radius: 3;</div><div class="line">    border: 0 none;</div><div class="line">    margin: 0;</div><div class="line">    min-height: 200rpx;</div><div class="line">    box-sizing: border-box;</div><div class="line">    transition: all .25s ease;</div><div class="line">    -webkit-transition: all .25s ease;</div><div class="line">&#125;</div><div class="line">.opt-item&#123;</div><div class="line">    position: absolute;</div><div class="line">    height: 100%;</div><div class="line">    width: 10%;</div><div class="line">    box-sizing: border-box;</div><div class="line">    padding-left: 20rpx;</div><div class="line">    min-height: 200rpx;</div><div class="line">    writing-mode: vertical-lr;</div><div class="line">    text-align: center;</div><div class="line">    vertical-align: middle;</div><div class="line">    display: inline-block;</div><div class="line">&#125;</div><div class="line">.opt-fav&#123;</div><div class="line">    color: #fff;</div><div class="line">    right: -10%;</div><div class="line">    background: #868484;</div><div class="line">&#125;</div><div class="line">.opt-del&#123;</div><div class="line">    color: #fff;</div><div class="line">    right: -20%;</div><div class="line">    background: #dc4545;</div><div class="line">&#125;</div><div class="line">.fav-del&#123;</div><div class="line">    color: #fff;</div><div class="line">    right: -10%;</div><div class="line">    background: #dc4545;</div><div class="line">&#125;</div><div class="line">.info-container&#123;</div><div class="line">    padding: 0 10rpx;</div><div class="line">&#125;</div><div class="line">.date&#123;</div><div class="line">    color: #fff;</div><div class="line">    text-align: left;</div><div class="line">    padding:18rpx 8rpx 8rpx 8rpx;</div><div class="line">&#125;</div><div class="line">.title&#123;</div><div class="line">    font-size: 28rpx;</div><div class="line">    color: #fff;</div><div class="line">    text-align: left;</div><div class="line">    padding:8rpx 8rpx 18rpx 8rpx;</div><div class="line">    color: #333;</div><div class="line">&#125;</div><div class="line">.content&#123;</div><div class="line">    font-size: 28rpx;</div><div class="line">    text-align: left;</div><div class="line">    padding:8rpx 8rpx 18rpx 8rpx;</div><div class="line">    color: #333;</div><div class="line">&#125;</div><div class="line">.blank-icon&#123;</div><div class="line">    margin: 0 auto;</div><div class="line">&#125;</div><div class="line">.fav-icon&#123;</div><div class="line">    position: absolute;</div><div class="line">    right: 0;</div><div class="line">    top: 0;</div><div class="line">    width: 60rpx;</div><div class="line">    height: 60rpx;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="简单理解">简单理解</h5><ul>
<li>小程序开发起来难度适中，主要是对框架，API以及组建的了解，开发过程中简单的拼凑，加上自己逻辑的串联，就可以完成一个小应用</li>
<li>对于前端开发来说，成本是非常低的，css，js语法一样，然后就是html，html就相当于我们使用一个新的模版引擎，更加强大的mustache</li>
<li>更像是hybrid开发，我们有调起原生的功能的能力，而又不需要去注册一堆方法(和app约定的方法),例如相册，定位，罗盘，网络，系统信息等</li>
<li>我们不用过多考虑路由的问题，兼容的问题</li>
<li>网络请求没有跨域产生的问题</li>
<li>解决了跨平台，多设备下的交互一致性</li>
</ul>
<h5 id="资料大全">资料大全</h5><p><a href="https://github.com/justjavac/awesome-wechat-weapp?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">资料大全</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h5 id="准备">准备</h5><ul>
<li>开发环境<ul>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html">下载开发工具</a></li>
<li><a href="https://github.com/gavinkwoe/weapp-ide-crack">按照网上教程破解</a></li>
<li>或者直接下载破解好的包</li>
</ul>
</li>
<li>学习资料<ul>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/">学习资料</a></li>
</ul>
</li>
</ul>]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs利用session做登录控制]]></title>
    <link href="http://www.xuerlove.com/2016/11/02/nodejs%E5%88%A9%E7%94%A8session%E5%81%9A%E7%99%BB%E5%BD%95%E6%8E%A7%E5%88%B6/"/>
    <id>http://www.xuerlove.com/2016/11/02/nodejs利用session做登录控制/</id>
    <published>2016-11-02T12:53:28.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<h4 id="background">background</h4><p>&nbsp; &nbsp;&nbsp;&nbsp;登录的场景在我们日常应用中有很多，登录的实现过程大家都很清楚，无非就是拿着用户名密去数据库中查询，如果查到了就表示这个人是系统用户，可以登录并且使用系统。那么当用户访问系统页面的时候，我们怎么判断他是不是登录过了呢，这个时候就引出了session。<br>&nbsp; &nbsp;&nbsp;&nbsp;session翻译成会话，session的生命周期和浏览器的生命周期一致，session从创建的一刻起开始生效，浏览器关闭session销毁。session是客户端与服务器之间保持状态的解决方案。这种会话的匹配是通过cookie来实现的。</p>
<a id="more"></a>
<h4 id="express-session">express-session</h4><p>&nbsp; &nbsp;&nbsp;&nbsp;express-session是基于express框架的专门处理session的中间件，安装 <code>sudo npm install express-session --save</code> , session的解析过程需要用到cookieParser, 安装 <code>sudo npm install cookieParser --save</code> , 我们在使用的时候，只需要把express-session加入到中间件中，这样所有的路由就都能使用它了，我们可以在req.session中设置和读取session的值。</p>
<h5 id="应用">应用</h5><p>改造上一节中的例子，这里只介绍一些增加项<br>app.js (引用session，加入中间件)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">var session = <span class="built_in">require</span>(<span class="string">'express-session'</span>);</div><div class="line"><span class="keyword">var</span> cookieParser = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>);</div><div class="line">...</div><div class="line">...</div><div class="line">app.use(cookieParser());</div><div class="line">app.use(session(&#123;</div><div class="line">  <span class="attr">resave</span>: <span class="literal">false</span>,</div><div class="line">  <span class="attr">saveUninitialized</span>: <span class="literal">true</span>,</div><div class="line">  <span class="attr">name</span>: <span class="string">'user'</span>,</div><div class="line">  <span class="attr">cookie</span>: &#123; <span class="attr">maxAge</span>: <span class="number">80000</span> &#125;,</div><div class="line">  <span class="attr">secret</span>: <span class="string">'wz'</span></div><div class="line">&#125;));</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure></p>
<p>routes/index.js (路由中检查登录session是否存在)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">restrict</span>(<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (req.session.user) &#123;</div><div class="line">    next();</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    res.redirect(<span class="string">'/login.page'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">router.get(<span class="string">'/index.page'</span>,restrict, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</div><div class="line">  res.send(<span class="string">'success'</span>);</div><div class="line">&#125;);</div><div class="line">router.get(<span class="string">'/login.page'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</div><div class="line">  res.send(<span class="string">'login'</span>);</div><div class="line">&#125;);</div><div class="line">router.get(<span class="string">'/login'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>)</span>&#123;</div><div class="line">    login(req, res, next);</div><div class="line">&#125;);</div><div class="line">router.get(<span class="string">'/logout'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</div><div class="line">  req.session.destroy(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    res.redirect(<span class="string">'/login.page'</span>);</div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>main/login.js (只增加了注释部分的代码)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">queryData</span>(<span class="params">req, res, next,query</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> query = query ? <span class="built_in">JSON</span>.parse(query) : &#123;&#125;;</div><div class="line">    pageModule.find(query).exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</div><div class="line">        res.writeHead(<span class="number">200</span>, &#123;</div><div class="line">            <span class="string">"Content-Type"</span>: <span class="string">"application/json;charset=UTF-8"</span></div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">if</span>(err)&#123;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbError);</div><div class="line">            res.end(result);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(data &amp;&amp; data.length)&#123;</div><div class="line">            <span class="comment">//只增加了登录成功后，创建一个session的过程</span></div><div class="line">            req.session.user = data[<span class="number">0</span>].username;</div><div class="line">            dbSuccess.data = data;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbSuccess);</div><div class="line">            res.end(result);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbError);</div><div class="line">            res.end(result);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="测试过程">测试过程</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span> http:<span class="comment">//127.0.0.1:3000/index.page</span></div><div class="line"><span class="number">2.</span> http:<span class="comment">//127.0.0.1:3000/login?type=find</span></div><div class="line"><span class="number">3.</span> http:<span class="comment">//127.0.0.1:3000/index.page</span></div></pre></td></tr></table></figure>
<p>分别输入三个url，观察现象，第一个url输入的时候，因为不存在session,所以会跳转到登录页面，<br>第二个url为模拟登录过程，创建了一个session，第三个url访问主页，此时存在session,所以可以看到首页内容。</p>
<h4 id="express-session常用参数">express-session常用参数</h4><ul>
<li>cookie Object类型，设置cookie的一些属性</li>
<li>domain cookie作用域</li>
<li>expires cookie失效时间</li>
<li>httpOnly 禁止客户端访问</li>
<li>maxAge 实效时长</li>
<li>path cookie路径</li>
<li>name 这是session id的值</li>
<li>resave 允许重新设置session</li>
<li>saveUninitialized 是否session可以修改</li>
<li>secret cookie密钥</li>
<li>store session存储方式 mongodb等</li>
</ul>
<h4 id="express-session常用方法">express-session常用方法</h4><ul>
<li>Session.regenerate() 创建session</li>
<li>Session.destroy() 销毁session</li>
<li>Session.reload() 重载session</li>
<li>Session.save() 保存session</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="background">background</h4><p>&nbsp; &nbsp;&nbsp;&nbsp;登录的场景在我们日常应用中有很多，登录的实现过程大家都很清楚，无非就是拿着用户名密去数据库中查询，如果查到了就表示这个人是系统用户，可以登录并且使用系统。那么当用户访问系统页面的时候，我们怎么判断他是不是登录过了呢，这个时候就引出了session。<br>&nbsp; &nbsp;&nbsp;&nbsp;session翻译成会话，session的生命周期和浏览器的生命周期一致，session从创建的一刻起开始生效，浏览器关闭session销毁。session是客户端与服务器之间保持状态的解决方案。这种会话的匹配是通过cookie来实现的。</p>]]>
    
    </summary>
    
      <category term="nodejs" scheme="http://www.xuerlove.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs+mongodb]]></title>
    <link href="http://www.xuerlove.com/2016/10/31/nodejs-mongodb/"/>
    <id>http://www.xuerlove.com/2016/10/31/nodejs-mongodb/</id>
    <published>2016-10-31T12:53:27.000Z</published>
    <updated>2017-02-17T06:24:15.000Z</updated>
    <content type="html"><![CDATA[<p>这篇文章中，我们使用nodejs搭建简易服务器，然后开发一个登录过程中使用的增删改查接口，数据库使用mongoDB,操作数据库模块选用mongoose。</p>
<h4 id="创建nodejs工程">创建nodejs工程</h4><p>npm init<br>创建package.json文件</p>
<a id="more"></a>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"name"</span>: <span class="string">"nodeblog"</span>,</div><div class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</div><div class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</div><div class="line">  <span class="attr">"scripts"</span>: &#123;</div><div class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</div><div class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</div><div class="line">  <span class="attr">"dependencies"</span>: &#123;</div><div class="line">    <span class="attr">"express"</span>: <span class="string">"^4.14.0"</span>,</div><div class="line">    <span class="attr">"mongoose"</span>: <span class="string">"^4.6.5"</span>,</div><div class="line">    <span class="attr">"url"</span>: <span class="string">"^0.11.0"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>dependencies中显示的是安装的依赖包，下面有安装过程，先不用考虑</p>
<h4 id="使用express">使用express</h4><p>sudo npm install express –save<br>快速构建web应用模块 资料: <a href="http://www.expressjs.com.cn/4x/api.html" target="_blank" rel="external">http://www.expressjs.com.cn/4x/api.html</a></p>
<h4 id="app-js">app.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">var</span> app = express();</div><div class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</div><div class="line">  res.send(<span class="string">'hello world'</span>);</div><div class="line">&#125;);</div><div class="line">app.listen(<span class="number">3000</span>);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'nodejs server start, listen port 3000'</span>);</div></pre></td></tr></table></figure>
<p>浏览器打开 <a href="http://127.0.0.1:3000/" target="_blank" rel="external">http://127.0.0.1:3000/</a> 页面显示 hello world</p>
<h4 id="使用mongoose">使用mongoose</h4><p>sudo npm install mongoose –save<br>数据库操作模块</p>
<h4 id="安装其他模块">安装其他模块</h4><p>sudo npm install url –save<br>辅助解析url参数</p>
<h4 id="nodejs操作数据库">nodejs操作数据库</h4><p>app.js 程序主文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">var</span> app = express();</div><div class="line"><span class="keyword">var</span> routes = <span class="built_in">require</span>(<span class="string">'./routes/index'</span>);</div><div class="line">app.use(<span class="string">'/'</span>, routes);</div><div class="line">app.listen(<span class="number">3000</span>);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'nodejs server start, listen port 3000'</span>);</div></pre></td></tr></table></figure></p>
<p>routes/index.js 路由文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">var</span> router = express.Router();</div><div class="line"><span class="keyword">var</span> login = <span class="built_in">require</span>(<span class="string">'../main/login'</span>);</div><div class="line">router.get([<span class="string">'/login'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">    login(req, res, next);</div><div class="line">&#125;);</div><div class="line"><span class="built_in">module</span>.exports = router;</div></pre></td></tr></table></figure></p>
<p>main/config.js 数据库配置文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> config = &#123;</div><div class="line">	<span class="attr">dbHost</span>: <span class="string">'127.0.0.1'</span>,</div><div class="line">	<span class="attr">dbPort</span>: <span class="string">'27017'</span>,</div><div class="line">	<span class="attr">dbAdmin</span>: <span class="string">'superuser'</span>,</div><div class="line">	<span class="attr">dbPassword</span>: <span class="string">'pwd'</span></div><div class="line">&#125;;</div><div class="line"><span class="built_in">module</span>.exports = config;</div></pre></td></tr></table></figure></p>
<p>main/loginSchema.js 数据库表结构<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>);</div><div class="line"><span class="keyword">var</span> loginSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</div><div class="line">	<span class="attr">username</span>: <span class="built_in">String</span>,</div><div class="line">	<span class="attr">userpassword</span>: <span class="built_in">String</span></div><div class="line">&#125;);</div><div class="line"><span class="built_in">module</span>.exports = loginSchema;</div></pre></td></tr></table></figure></p>
<p>main/login.js 登录增删改查逻辑文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>),</div><div class="line">    mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>),</div><div class="line">    loginSchema = <span class="built_in">require</span>(<span class="string">'./loginSchema'</span>),</div><div class="line">    config = <span class="built_in">require</span>(<span class="string">'./config'</span>);</div><div class="line"><span class="keyword">var</span> opt = &#123;</div><div class="line">        <span class="attr">user</span>: config.dbAdmin,</div><div class="line">        <span class="attr">pass</span>: config.dbPassword,</div><div class="line">        <span class="attr">auth</span>: &#123;</div><div class="line">            <span class="attr">authdb</span>: <span class="string">'admin'</span></div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    db = mongoose.createConnection(config.dbHost, <span class="string">'userinfo'</span>, config.dbPort, opt),</div><div class="line">    pageModule = db.model(<span class="string">"user"</span>, loginSchema);</div><div class="line"><span class="keyword">var</span> result,</div><div class="line">    dbSuccess = &#123;</div><div class="line">    	<span class="attr">ret</span>:<span class="literal">true</span>,</div><div class="line">    	<span class="attr">data</span>:&#123;&#125;</div><div class="line">    &#125;, </div><div class="line">    dbError = &#123;</div><div class="line">    	<span class="attr">ret</span>:<span class="literal">false</span>,</div><div class="line">    	<span class="attr">data</span>:<span class="string">'fail'</span></div><div class="line">    &#125;;</div><div class="line"><span class="comment">/**</span></div><div class="line"> *  存储数据</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveData</span>(<span class="params">req, res, next, pageData</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> pageDataModule = <span class="keyword">new</span> pageModule(<span class="built_in">JSON</span>.parse(pageData));</div><div class="line">    pageDataModule.save(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</div><div class="line">        res.writeHead(<span class="number">200</span>, &#123;</div><div class="line">            <span class="string">"Content-Type"</span>: <span class="string">"application/json;charset=UTF-8"</span></div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">if</span>(err)&#123;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbError);</div><div class="line">            res.end(result);</div><div class="line">        &#125;</div><div class="line">        dbSuccess.data = <span class="string">'操作成功'</span>;</div><div class="line">        result = <span class="built_in">JSON</span>.stringify(dbSuccess);</div><div class="line">        res.end(result);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line"> *  删除数据</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteData</span>(<span class="params">req, res, next,query</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> query = query ? <span class="built_in">JSON</span>.parse(query) : &#123;&#125;;</div><div class="line">    pageModule.remove(query).exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</div><div class="line">        res.writeHead(<span class="number">200</span>, &#123;</div><div class="line">            <span class="string">"Content-Type"</span>: <span class="string">"application/json;charset=UTF-8"</span></div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">if</span>(err)&#123;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbError);</div><div class="line">            res.end(result);</div><div class="line">        &#125;</div><div class="line">        dbSuccess.data = <span class="string">'操作成功'</span>;</div><div class="line">        result = <span class="built_in">JSON</span>.stringify(dbSuccess);</div><div class="line">        res.end(result);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line"> *  更新数据</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateData</span>(<span class="params">req, res, next,query, pageData</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> query = query ? <span class="built_in">JSON</span>.parse(query) : &#123;&#125;;</div><div class="line">    pageData = <span class="built_in">JSON</span>.parse(pageData);</div><div class="line">    pageModule.findOneAndUpdate(query, pageData).exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</div><div class="line">        res.writeHead(<span class="number">200</span>, &#123;</div><div class="line">            <span class="string">"Content-Type"</span>: <span class="string">"application/json;charset=UTF-8"</span></div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">if</span>(err)&#123;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbError);</div><div class="line">            res.end(result);</div><div class="line">        &#125;</div><div class="line">        dbSuccess.data = <span class="string">'操作成功'</span>;</div><div class="line">        result = <span class="built_in">JSON</span>.stringify(dbSuccess);</div><div class="line">        res.end(result);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line"> *  查询数据</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">queryData</span>(<span class="params">req, res, next,query</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> query = query ? <span class="built_in">JSON</span>.parse(query) : &#123;&#125;;</div><div class="line">    pageModule.find(query).exec(<span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</div><div class="line">        res.writeHead(<span class="number">200</span>, &#123;</div><div class="line">            <span class="string">"Content-Type"</span>: <span class="string">"application/json;charset=UTF-8"</span></div><div class="line">        &#125;);</div><div class="line">        <span class="keyword">if</span>(err)&#123;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbError);</div><div class="line">            res.end(result);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(data &amp;&amp; data.length)&#123;</div><div class="line">            dbSuccess.data = data;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbSuccess);</div><div class="line">            res.end(result);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            result = <span class="built_in">JSON</span>.stringify(dbError);</div><div class="line">            res.end(result);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line"> *  增删改查入口</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">req, res, next</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> queryObj = url.parse(<span class="built_in">decodeURIComponent</span>(req.url), <span class="literal">true</span>).query,</div><div class="line">	    type = queryObj.type,</div><div class="line">	    query = queryObj.query,</div><div class="line">	    pageData = queryObj.pageData;</div><div class="line">	<span class="keyword">switch</span>(type)&#123;</div><div class="line">		<span class="keyword">case</span> <span class="string">'add'</span>:</div><div class="line">			saveData(req, res, next,pageData);</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'delete'</span>:</div><div class="line">			deleteData(req, res, next,query);</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'update'</span>:</div><div class="line">			updateData(req, res, next,query, pageData)</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">case</span> <span class="string">'find'</span>:</div><div class="line">			queryData(req, res, next,query)</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">default</span>:</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">module</span>.exports = login;</div></pre></td></tr></table></figure></p>
<h4 id="测试url">测试url</h4><p>1.<a href="http://127.0.0.1:3000/login?type=add&amp;pageData={&quot;username&quot;:&quot;wz&quot;,&quot;userpassword&quot;:&quot;wz&quot;}" target="_blank" rel="external">http://127.0.0.1:3000/login?type=add&amp;pageData={&quot;username&quot;:&quot;wz&quot;,&quot;userpassword&quot;:&quot;wz&quot;}</a><br>2.<a href="http://127.0.0.1:3000/login?type=find" target="_blank" rel="external">http://127.0.0.1:3000/login?type=find</a><br>3.<a href="http://127.0.0.1:3000/login?type=update&amp;query={&quot;username&quot;:&quot;wz&quot;}&amp;pageData={&quot;username&quot;:&quot;ww&quot;,&quot;userpassword&quot;:&quot;wz&quot;}" target="_blank" rel="external">http://127.0.0.1:3000/login?type=update&amp;query={&quot;username&quot;:&quot;wz&quot;}&amp;pageData={&quot;username&quot;:&quot;ww&quot;,&quot;userpassword&quot;:&quot;wz&quot;}</a><br>4.<a href="http://127.0.0.1:3000/login?type=delete&amp;query={&quot;username&quot;:&quot;ww&quot;}" target="_blank" rel="external">http://127.0.0.1:3000/login?type=delete&amp;query={&quot;username&quot;:&quot;ww&quot;}</a><br>提供的测试url分别做了：1 向数据库中插入一条数据，2 在数据库中查找users表中所有数据，3 修改第一步中添加的数据，4 删除第三步中修改的数据。都以json格式返回给客户端。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这篇文章中，我们使用nodejs搭建简易服务器，然后开发一个登录过程中使用的增删改查接口，数据库使用mongoDB,操作数据库模块选用mongoose。</p>
<h4 id="创建nodejs工程">创建nodejs工程</h4><p>npm init<br>创建package.json文件</p>]]>
    
    </summary>
    
      <category term="nodejs" scheme="http://www.xuerlove.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mongodb]]></title>
    <link href="http://www.xuerlove.com/2016/10/31/mongodb/"/>
    <id>http://www.xuerlove.com/2016/10/31/mongodb/</id>
    <published>2016-10-31T11:57:13.000Z</published>
    <updated>2017-02-17T09:06:56.000Z</updated>
    <content type="html"><![CDATA[<h4 id="环境">环境</h4><ul>
<li>centeros</li>
</ul>
<h4 id="下载">下载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.2.10.tgz</div></pre></td></tr></table></figure>
<h4 id="解压">解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar -zxvf mongodb-linux-x86_64-3.2.10.tgz</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="加入PATH">加入PATH</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> mongodb-linux-x86_64-3.2.10</div><div class="line"><span class="built_in">export</span> PATH=/home/q/mongodb-linux-x86_64-3.2.10/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<h4 id="创建基础文件">创建基础文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p data/db</div><div class="line">sudo mkdir logs</div><div class="line">sudo vim ./bin/mongodb.conf</div></pre></td></tr></table></figure>
<h4 id="加入内容">加入内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">port=27017</div><div class="line">dbpath=/home/q/mongodb-linux-x86_64-3.2.10/data/db</div><div class="line">logpath=/home/q/mongodb-linux-x86_64-3.2.10/logs/db.logs</div><div class="line">logappend=<span class="literal">true</span></div></pre></td></tr></table></figure>
<h4 id="启动服务">启动服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mongod -config /home/q/mongodb-linux-x86_64-3.2.10/bin/mongodb.conf  --fork --auth</div></pre></td></tr></table></figure>
<h4 id="连接数据库">连接数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongo</div></pre></td></tr></table></figure>
<h4 id="添加用户">添加用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">use admin</div><div class="line">db.createUser(</div><div class="line">  &#123;</div><div class="line">    user:<span class="string">"superuser"</span>,</div><div class="line">    <span class="built_in">pwd</span>:<span class="string">"pwd"</span>,</div><div class="line">    roles:[<span class="string">"root"</span>]</div><div class="line">  &#125;</div><div class="line">)</div></pre></td></tr></table></figure>
<h4 id="认证">认证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">use admin</div><div class="line">db.auth(<span class="string">'superuser'</span>,<span class="string">'pwd'</span>)</div></pre></td></tr></table></figure>
<h4 id="添加用户-1">添加用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">db.createUser(</div><div class="line">   &#123;</div><div class="line">     user: <span class="string">"zhuo.wu"</span>,</div><div class="line">     <span class="built_in">pwd</span>: <span class="string">"zhuo.wu"</span>,</div><div class="line">     roles: [ <span class="string">"readWrite"</span>, <span class="string">"dbAdmin"</span> ]</div><div class="line">   &#125;</div><div class="line">)</div></pre></td></tr></table></figure>
<h4 id="查看用户">查看用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show users</div></pre></td></tr></table></figure>
<h4 id="创建数据库">创建数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use <span class="built_in">test</span>DB</div></pre></td></tr></table></figure>
<h4 id="创建集合">创建集合</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">db.test.insert(&#123;<span class="string">'k'</span>:<span class="string">'123'</span>&#125;)</div><div class="line">show dbs</div><div class="line">db.test.find()</div></pre></td></tr></table></figure>
<h4 id="删除集合">删除集合</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db.test.drop()</div></pre></td></tr></table></figure>
<h4 id="删除数据库">删除数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db.dropDatabase()</div></pre></td></tr></table></figure>
<h4 id="数据库备份">数据库备份</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mongodump -u=superuser -p=<span class="built_in">pwd</span></div><div class="line"><span class="comment">#mongodump -h dbhost -d dbname -o dbdirectory</span></div></pre></td></tr></table></figure>
<h4 id="数据库恢复">数据库恢复</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mongodump -u=superuser -p=<span class="built_in">pwd</span></div><div class="line"><span class="comment">#mongorestore -h dbhost -d dbname --directoryperdb dbdirectory</span></div></pre></td></tr></table></figure>
<h4 id="定时备份数据库">定时备份数据库</h4><ul>
<li><p>备份目录</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /home/mongo/temp &amp;&amp; sudo chmod -R 777 /home/mongo/temp</div><div class="line">sudo mkdir -p /home/mongo/all &amp;&amp; sudo chmod -R 777 /home/mongo/all</div></pre></td></tr></table></figure>
</li>
<li><p>备份脚本<br>sudo vim /home/schedule/mongo.sh</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line">user=superuser</div><div class="line">passwprd=<span class="built_in">pwd</span></div><div class="line">deldays=2</div><div class="line">backdate=`date +%Y-%m-%d`</div><div class="line">backname=<span class="string">"mg_<span class="variable">$backdate</span>.tar.gz"</span></div><div class="line">mongodump=/home/q/mongodb-linux-x86_64-3.2.10/bin/mongodump</div><div class="line">temp=/home/mongo/temp</div><div class="line">all=/home/mongo/all</div><div class="line"><span class="built_in">cd</span> <span class="variable">$temp</span></div><div class="line">rm -rf <span class="variable">$temp</span>/*</div><div class="line">mkdir -p <span class="variable">$temp</span>/<span class="variable">$backdate</span></div><div class="line"><span class="variable">$mongodump</span> -u <span class="variable">$user</span> -p <span class="variable">$passwprd</span> -o <span class="variable">$temp</span>/<span class="variable">$backdate</span></div><div class="line">tar -zcvf <span class="variable">$all</span>/<span class="variable">$backname</span> <span class="variable">$temp</span>/<span class="variable">$backdate</span></div><div class="line">find <span class="variable">$all</span>/ -mtime +<span class="variable">$deldays</span> -delete</div></pre></td></tr></table></figure>
</li>
<li><p>修改权限</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod -R 777 /home/schedule/mongo.sh</div></pre></td></tr></table></figure>
</li>
<li><p>定时任务<br>sudo vim /etc/crontab</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">40 18 * * * root /home/schedule/mongo.sh</div></pre></td></tr></table></figure>
</li>
<li><p>重启定时任务</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/rc.d/init.d/crond restart</div></pre></td></tr></table></figure>
</li>
<li><p>开机启动</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chkconfig crond on</div></pre></td></tr></table></figure>
</li>
<li><p>启动服务</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service crond start</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="关闭数据库">关闭数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">use admin</div><div class="line">db.auth(<span class="string">'superuser'</span>,<span class="string">'pwd'</span>)</div><div class="line">db.shutdownServer()</div><div class="line"><span class="comment">#or</span></div><div class="line">db.adminCommand(&#123;shutdown : 1, force : <span class="literal">true</span>&#125;)</div><div class="line"><span class="comment">#or</span></div><div class="line">db.shutdownServer(&#123;force : <span class="literal">true</span>&#125;)</div></pre></td></tr></table></figure>
<h4 id="常见问题">常见问题</h4><ul>
<li>数据库非正常关闭lock<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo rm -rf /home/q/mongodb-linux-x86_64-3.2.10/data/db/mongod.lock</div><div class="line">sudo mongod --dbpath /home/q/mongodb-linux-x86_64-3.2.10/data/db --repair</div><div class="line">sudo ./mongod --dbpath /home/q/mongodb-linux-x86_64-3.2.10/data/db</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="推荐数据库软件">推荐数据库软件</h4><ul>
<li>Mac: Toad (app store)</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="环境">环境</h4><ul>
<li>centeros</li>
</ul>
<h4 id="下载">下载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.2.10.tgz</div></pre></td></tr></table></figure>
<h4 id="解压">解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tar -zxvf mongodb-linux-x86_64-3.2.10.tgz</div></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="linux" scheme="http://www.xuerlove.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[fetch]]></title>
    <link href="http://www.xuerlove.com/2016/08/31/fetch/"/>
    <id>http://www.xuerlove.com/2016/08/31/fetch/</id>
    <published>2016-08-31T13:17:37.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<h5 id="介绍">介绍</h5><ul>
<li>遵循Promise解决方案</li>
<li>XMLHttpRequest的替代者</li>
</ul>
<h5 id="使用">使用</h5><ul>
<li>引入Promise兼容方案</li>
<li>引入fetch兼容方案（高级浏览器高版本已经支持）</li>
<li>兼容方案以及使用说明见 <a href="https://github.com/github/fetch" target="_blank" rel="external">https://github.com/github/fetch</a><a id="more"></a>
</li>
</ul>
<h5 id="详解">详解</h5><h6 id="Header">Header</h6><h6 id="Request">Request</h6><h6 id="Response">Response</h6><h5 id="示例">示例</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkStatus</span>(<span class="params">response</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (response.status &gt;= <span class="number">200</span> &amp;&amp; response.status &lt; <span class="number">300</span>) &#123;</div><div class="line">    <span class="keyword">return</span> response</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">var</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(response.statusText)</div><div class="line">    error.response = response</div><div class="line">    <span class="keyword">throw</span> error</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseJSON</span>(<span class="params">response</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> response.json()</div><div class="line">&#125;</div><div class="line"></div><div class="line">fetch(<span class="string">'/test.json'</span>)</div><div class="line">  .then(checkStatus)</div><div class="line">  .then(parseJSON)</div><div class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'request succeeded with JSON response'</span>, data)</div><div class="line">  &#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'request failed'</span>, error)</div><div class="line">  &#125;);</div></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h5 id="介绍">介绍</h5><ul>
<li>遵循Promise解决方案</li>
<li>XMLHttpRequest的替代者</li>
</ul>
<h5 id="使用">使用</h5><ul>
<li>引入Promise兼容方案</li>
<li>引入fetch兼容方案（高级浏览器高版本已经支持）</li>
<li>兼容方案以及使用说明见 <a href="https://github.com/github/fetch">https://github.com/github/fetch</a>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://www.xuerlove.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[移动端开发性能优化]]></title>
    <link href="http://www.xuerlove.com/2016/04/14/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://www.xuerlove.com/2016/04/14/移动端开发性能优化/</id>
    <published>2016-04-14T02:43:35.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<h5 id="介绍">介绍</h5><p>移动端这几年可以说发展的特别快，并且以绝对的优势超过了pc端，所以移动端的应用也越来越多，越来越重要。移动端不同于pc端，从设备的性能，网络差异，屏幕大小都有很大的差异，所以移动端的性能要尤为注意，力争我们的网站在移动端性能达到最佳。</p>
<a id="more"></a>
<h5 id="代码">代码</h5><p>从代码层面讲，务必做到精简，高效。移动端平台分ios android windows phone等，每个平台又有很多手机生产商，每种手机的性能又差异很大，还有些厂商还会自己定制浏览器内核，等等因素吧，导致了移动端经常出现各种差异性的表现，常常顾此失彼。那么就要求我们写的代码效率高一些，逻辑精简些，从程序层面减少因性能带来的问题，这是最好的方法去避免出现一些奇葩问题。还要做好一系列的异常处理措施，不要让代码出现报错的情况。减少dom操作，增加数据缓存机制，离线数据处理等，另外代码的精简也可以让页面下载资源的时间减少。</p>
<h5 id="框架">框架</h5><p>最近在开发过程中，使用了reactjs这个框架，不得不说这个框架应用起来还是比较顺利的，从开发到最终的页面表现来说，都是比较满意的。但是有一个问题是，在生成的代码中会生成过多的dom节点，这一点需要注意一下。因为在hybrid中，dom元素过多可能会影响页面性能，甚至导致app崩溃。</p>
<h5 id="组件">组件</h5><p>应用第三方组件，要慎重考虑，这里就拿iscroll来说，这个组建无疑优化了滑动的体验，但是它是非常耗性能的，还有就是安卓手机上的表现并不理想，在一些滚动监听上也存在问题。</p>
<h5 id="布局与css">布局与css</h5><p>合理的布局能够有效的减少显示上的bug，常见的就是fixed的问题，以及input框和软键盘的问题。</p>
<h5 id="硬件加速">硬件加速</h5><p>硬件加速是一件好事，但是它的弊端也显露无疑，电池耗电快，手机发热等等</p>
<h5 id="优化点">优化点</h5><ul>
<li>合并域名，减少dns解析的时间</li>
<li>请求数量尽量少，相应的数据尽量精简</li>
<li>请求尽量并发，不要串行</li>
<li>静态资源使用单独的域名，做到cookie free，有条件的话使用cdn</li>
<li>合并小图标，使用雪碧图，使用font代替图标</li>
<li>去掉没用cookie，cookie命名尽量简短，cookie值尽量精简</li>
<li>完善本地缓存数据（优先展示出缓存数据，数据返回后再更新）</li>
<li>注意jsonp的请求，jsonp会阻塞页面加载，阻塞页面操作，做好超时异常判断</li>
<li>压缩html中的空格换行，使用gzip压缩</li>
<li>css规则不要太复杂，去掉没用的css，css放在head中，js放在body底部</li>
<li>尽量使用原生方法</li>
<li>减少dom操作，尽量缓存dom</li>
<li>touch端应该考虑使用离线存储(cache manifest)</li>
<li>hybrid尽量使用离线包机制</li>
<li>对于过长的页面，应该考虑优先加载精简页面(短页面)，点击底部加载更多按钮，根据当前gps,network记录当前网络情况(页面其余部分加载时间小于一定范围即可以认定网络好)，下次在一定范围内打开页面默认加载全的页面，否则展示精简页面，对一些低版本的系统，可以让它永远展示精简页面，查看全部才能看到全部内容，这样能够保证用户看到页面的速度</li>
<li>页面内容按需加载，模块可以使用滚动加载，图片使用懒加载</li>
<li>页面渲染尽量不要依赖接口数据返回，接口的不稳定性可能会拖累页面加载时间</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[移动端开发性能优化]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[reactjs应用]]></title>
    <link href="http://www.xuerlove.com/2016/04/14/reactjs%E5%BA%94%E7%94%A8/"/>
    <id>http://www.xuerlove.com/2016/04/14/reactjs应用/</id>
    <published>2016-04-14T02:42:32.000Z</published>
    <updated>2017-02-17T06:24:42.000Z</updated>
    <content type="html"><![CDATA[<h4 id="reactjs">reactjs</h4><p>官方文档 <a href="http://reactjs.cn/react/docs/getting-started.html" target="_blank" rel="external">http://reactjs.cn/react/docs/getting-started.html</a></p>
<h5 id="引用reactjs框架">引用reactjs框架</h5><ul>
<li>实时转换工具 <code>npm install -g react-tools</code> 启动命令 <code>jsx --watch src/ build/</code> （或者页面引入jsx编译工具）</li>
<li>引入fetch <a href="https://github.com/github/fetch" target="_blank" rel="external">https://github.com/github/fetch</a> （引入Promise）</li>
<li>jsx <a href="http://reactjs.cn/react/docs/jsx-in-depth.html" target="_blank" rel="external">http://reactjs.cn/react/docs/jsx-in-depth.html</a><a id="more"></a>
</li>
</ul>
<h5 id="过程">过程</h5><ul>
<li>通过 React.createClass 定义组件</li>
<li>组件包含的属性，方法(<a href="http://reactjs.cn/react/docs/component-specs.html" target="_blank" rel="external">http://reactjs.cn/react/docs/component-specs.html</a>)<ul>
<li>render</li>
<li>getInitialState</li>
<li>getDefaultProps</li>
<li>propTypes</li>
<li>mixins</li>
<li>statics</li>
<li>displayName</li>
</ul>
</li>
<li>生命周期方法(<a href="http://reactjs.cn/react/docs/component-specs.html" target="_blank" rel="external">http://reactjs.cn/react/docs/component-specs.html</a>)<ul>
<li>componentWillMount</li>
<li>componentDidMount</li>
<li>componentWillReceiveProps</li>
<li>shouldComponentUpdate</li>
<li>componentWillUpdate</li>
<li>componentDidUpdate</li>
<li>componentWillUnmount</li>
</ul>
</li>
<li>组件生命周期<br>了解组件的生命周期很重要，这在我们哪个阶段去调用什么方法是有帮助的，下面就一起来看一下：</li>
</ul>
<ol>
<li>getInitialState<ul>
<li>在组件类创建的时候只调用一次，返回值是 this.state 的初始值</li>
</ul>
</li>
<li>componentWillMount<ul>
<li>初始化渲染之前只调用一次，如果在这个阶段setState，更新将会通知render</li>
</ul>
</li>
<li>render<ul>
<li>会根据this.props或者this.state渲染组件</li>
</ul>
</li>
<li>componentDidMount<ul>
<li>在初始化渲染之后只调用一次，可以操作dom和浏览器交互，通过this.DOMNode()获取DOM节点</li>
</ul>
</li>
<li>componentWillReceiveProps<ul>
<li>组件接收到新的props都会调用，初始化的时候不会调用这个方法，可以在这里面更新this.state</li>
</ul>
</li>
<li>componentWillUpdate<ul>
<li>在接收到新的props或者state之前的时候调用，初始化渲染的时候不会调用，里面做更新前的准备工作，不能在里面setState</li>
</ul>
</li>
<li><p>shouldComponentUpdate</p>
<ul>
<li><p>在接收到新的props或者state的时候，渲染之前调用，在初始化的时候不会调用，如果确定新的props和state不会导致组件更新，可以返回false,默认返回true</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">shouldComponentUpdate: <span class="function"><span class="keyword">function</span>(<span class="params">nextProps, nextState</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> nextProps.id !== <span class="keyword">this</span>.props.id;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>这个方法可以提升程序性能，一些依赖父级props，组件本身会发送请求的情况，可以判断传入props是否是更新后的，然后再去执行接下来的动作。</p>
</li>
</ul>
</li>
<li>componentDidUpdate<ul>
<li>组件更新到DOM中被调用，初始化的时候不会调用，对dom的操作可以放在这里面执行</li>
</ul>
</li>
<li>componentWillUnmount<ul>
<li>组件从dom中移除的时候调用，这个方法中清除一些定时操作等</li>
</ul>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="reactjs">reactjs</h4><p>官方文档 <a href="http://reactjs.cn/react/docs/getting-started.html">http://reactjs.cn/react/docs/getting-started.html</a></p>
<h5 id="引用reactjs框架">引用reactjs框架</h5><ul>
<li>实时转换工具 <code>npm install -g react-tools</code> 启动命令 <code>jsx --watch src/ build/</code> （或者页面引入jsx编译工具）</li>
<li>引入fetch <a href="https://github.com/github/fetch">https://github.com/github/fetch</a> （引入Promise）</li>
<li>jsx <a href="http://reactjs.cn/react/docs/jsx-in-depth.html">http://reactjs.cn/react/docs/jsx-in-depth.html</a>]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs开发控制台工具]]></title>
    <link href="http://www.xuerlove.com/2016/04/14/nodejs%E5%BC%80%E5%8F%91%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.xuerlove.com/2016/04/14/nodejs开发控制台工具/</id>
    <published>2016-04-14T02:41:56.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<h4 id="环境要求">环境要求</h4><ul>
<li>nodejs</li>
</ul>
<h4 id="基本文件结构">基本文件结构</h4><ul>
<li>package.json <ul>
<li>使用npm init生成</li>
<li>安装依赖模块使用 npm install 模块名</li>
</ul>
</li>
<li>一个主文件 index.js</li>
</ul>
<a id="more"></a>
<h4 id="例子：">例子：</h4><ul>
<li><p>package.json</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span>: <span class="string">"node-translate"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">  <span class="string">"description"</span>: <span class="string">"translate"</span>,</div><div class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"bin"</span>: &#123;</div><div class="line">    <span class="string">"trans"</span>: <span class="string">"./index.js"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"author"</span>: <span class="string">"黑卓"</span>,</div><div class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</div><div class="line">  <span class="string">"dependencies"</span>: &#123;</div><div class="line">    <span class="string">"color"</span>: <span class="string">"^0.11.1"</span>,</div><div class="line">    <span class="string">"colors"</span>: <span class="string">"^1.1.2"</span>,</div><div class="line">    <span class="string">"commander"</span>: <span class="string">"^2.9.0"</span>,</div><div class="line">    <span class="string">"request"</span>: <span class="string">"^2.70.0"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>index.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#! /usr/bin/env node</span></div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * @Author: 黑卓</div><div class="line"> * @Date:   2016-04-07 15:47:33</div><div class="line"> * @Last Modified by:   黑卓</div><div class="line"> * @Last Modified time: 2016-04-07 17:56:40</div><div class="line"> */</div><div class="line"><span class="meta"></span></div><div class="line">'use strict';</div><div class="line"></div><div class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</div><div class="line"><span class="keyword">var</span> colors = <span class="built_in">require</span>(<span class="string">'colors'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> program = <span class="built_in">require</span>(<span class="string">'commander'</span>);</div><div class="line">program.version(<span class="string">'0.0.1'</span>).parse(process.argv);</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">var</span> param = process.argv[<span class="number">2</span>];</div><div class="line"></div><div class="line">	<span class="keyword">var</span> word = param ? param : <span class="string">''</span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (!word) &#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">'请输入要查询的单词'</span>.underline.red);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="built_in">console</span>.log(<span class="string">''</span>);</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'要翻译的单词 : '</span>.green + <span class="string">' : '</span> + word.underline.red);</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">''</span>);</div><div class="line"></div><div class="line">	<span class="keyword">var</span> option = &#123;</div><div class="line">		<span class="attr">from</span>: <span class="string">'zh'</span>,</div><div class="line">		<span class="attr">to</span>: <span class="string">'en'</span>,</div><div class="line">		<span class="attr">query</span>: <span class="built_in">encodeURIComponent</span>(word)</div><div class="line">	&#125;;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (<span class="regexp">/^[A-Za-z ]+$/</span>.test(word.trim())) &#123;</div><div class="line">		option.from = <span class="string">'en'</span>;</div><div class="line">		option.to = <span class="string">'zh'</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">var</span> url = <span class="string">'http://test.com'</span>; <span class="comment">// 这里换成了假url</span></div><div class="line"></div><div class="line">	<span class="keyword">var</span> paramArray = [];</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> option) &#123;</div><div class="line">		<span class="keyword">var</span> pStr = item + <span class="string">'='</span> + option[item];</div><div class="line">		paramArray.push(pStr);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	url += <span class="string">'?'</span> + paramArray.join(<span class="string">'&amp;'</span>);</div><div class="line"></div><div class="line">	request(url, <span class="function"><span class="keyword">function</span>(<span class="params">error, response, data</span>) </span>&#123;</div><div class="line">		<span class="keyword">if</span> (!error &amp;&amp; response.statusCode == <span class="number">200</span>) &#123;</div><div class="line">			data = <span class="built_in">JSON</span>.parse(data);</div><div class="line">			<span class="keyword">if</span> (data &amp;&amp; data.result) &#123;</div><div class="line">				<span class="built_in">console</span>.log(<span class="string">'翻译结果 : '</span>.green + data.result.dst.underline.red || <span class="string">'没有查询到结果'</span>.underline.red);</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				<span class="built_in">console</span>.log(<span class="string">'没有查询到结果'</span>.underline.red);</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">console</span>.log(<span class="string">''</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;());</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="链接到全局">链接到全局</h4><p>npm link</p>
<h4 id="自行发布">自行发布</h4><h4 id="request">request</h4><p>request模块让http请求变的简单,<a href="https://www.npmjs.com/package/request" target="_blank" rel="external">https://www.npmjs.com/package/request</a></p>
<h4 id="colors">colors</h4><p>终端着色colors插件,<a href="https://www.npmjs.com/package/colors" target="_blank" rel="external">https://www.npmjs.com/package/colors</a></p>
<h4 id="program">program</h4><p>nodejs命令行参数处理模块commander,<a href="https://www.npmjs.com/package/commander" target="_blank" rel="external">https://www.npmjs.com/package/commander</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="环境要求">环境要求</h4><ul>
<li>nodejs</li>
</ul>
<h4 id="基本文件结构">基本文件结构</h4><ul>
<li>package.json <ul>
<li>使用npm init生成</li>
<li>安装依赖模块使用 npm install 模块名</li>
</ul>
</li>
<li>一个主文件 index.js</li>
</ul>]]>
    
    </summary>
    
      <category term="nodejs" scheme="http://www.xuerlove.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[npm包开发]]></title>
    <link href="http://www.xuerlove.com/2016/04/14/npm%E5%8C%85%E5%BC%80%E5%8F%91/"/>
    <id>http://www.xuerlove.com/2016/04/14/npm包开发/</id>
    <published>2016-04-14T02:41:29.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<h4 id="环境要求">环境要求</h4><ul>
<li>nodejs</li>
</ul>
<h4 id="基本文件结构">基本文件结构</h4><ul>
<li>package.json <ul>
<li>使用npm init生成</li>
<li>安装依赖模块使用 npm install 模块名</li>
</ul>
</li>
<li>一个主文件 index.js</li>
<li>一个lib文件夹<ul>
<li>存放源文件<a id="more"></a>
</li>
</ul>
</li>
</ul>
<h4 id="例子">例子</h4><ul>
<li><p>package.json</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span>: <span class="string">"node-tools"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">  <span class="string">"description"</span>: <span class="string">""</span>,</div><div class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</div><div class="line">  <span class="string">"scripts"</span>: &#123;</div><div class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="string">"author"</span>: <span class="string">""</span>,</div><div class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>index.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line">* @Author: amos</div><div class="line">* @Date:   2016-04-08 13:57:37</div><div class="line">* @Last Modified by:   amos</div><div class="line">* @Last Modified time: 2016-04-08 13:58:26</div><div class="line">*/</div><div class="line"><span class="meta"></span></div><div class="line">'use strict';</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = <span class="built_in">require</span>(./lib/index);</div></pre></td></tr></table></figure>
</li>
<li><p><code>lib/index.js</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> * @Author: amos</div><div class="line"> * @Date:   2016-04-08 13:58:47</div><div class="line"> * @Last Modified by:   amos</div><div class="line"> * @Last Modified time: 2016-04-08 14:19:04</div><div class="line"> */</div><div class="line"><span class="meta"></span></div><div class="line">'use strict';</div><div class="line"></div><div class="line"><span class="keyword">var</span> Tools = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="comment">//==================================</span></div><div class="line">	<span class="comment">// 检测iOS版本</span></div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">gtIOS</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> userAgent = <span class="built_in">window</span>.navigator.userAgent;</div><div class="line">		<span class="keyword">var</span> ios = userAgent.match(<span class="regexp">/(iPad|iPhone|iPod)/</span>s + OS / s([<span class="regexp">/d_/</span>.] + ) / );</div><div class="line">		<span class="keyword">return</span> ios &amp;&amp; ios[<span class="number">2</span>] &amp;&amp; <span class="built_in">parseInt</span>(ios[<span class="number">2</span>].replace(<span class="regexp">/_/g</span>, <span class="string">'.'</span>), <span class="number">10</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//==================================</span></div><div class="line"></div><div class="line">	<span class="comment">//==================================</span></div><div class="line">	<span class="comment">// 检测支持css属性</span></div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">isSupportCss</span>(<span class="params">key, value</span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> prefixTestList = [<span class="string">''</span>, <span class="string">'-webkit-'</span>, <span class="string">'-ms-'</span>, <span class="string">'-moz-'</span>, <span class="string">'-o-'</span>];</div><div class="line">		<span class="keyword">var</span> cssText = <span class="string">''</span>;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; prefixTestList.length; i++) &#123;</div><div class="line">			cssText += key + <span class="string">':'</span> + prefixTestList[i] + value + <span class="string">';'</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">// 创建一个dom来检查</span></div><div class="line">		<span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</div><div class="line">		<span class="keyword">var</span> body = <span class="built_in">document</span>.body;</div><div class="line">		div.style.cssText = <span class="string">'display:none;'</span> + cssText;</div><div class="line">		body.appendChild(div);</div><div class="line">		<span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(value, i);</div><div class="line">		<span class="keyword">var</span> isSupport = reg.test(<span class="built_in">window</span>.getComputedStyle(div)[key]);</div><div class="line">		body.removeChild(div);</div><div class="line">		div = <span class="literal">null</span>;</div><div class="line">		<span class="keyword">return</span> isSupport;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//==================================</span></div><div class="line"></div><div class="line">	<span class="comment">//==================================</span></div><div class="line">	<span class="comment">// 防止内容区域滚到底后引起页面整体的滚动</span></div><div class="line">	<span class="keyword">var</span> content = <span class="built_in">document</span>.querySelector(<span class="string">'main'</span>);</div><div class="line">	<span class="keyword">var</span> startY;</div><div class="line"></div><div class="line">	content.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">		startY = e.touches[<span class="number">0</span>].clientY;</div><div class="line">	&#125;);</div><div class="line"></div><div class="line">	content.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">		<span class="comment">// 高位表示向上滚动</span></div><div class="line">		<span class="comment">// 底位表示向下滚动</span></div><div class="line">		<span class="comment">// 1容许 0禁止</span></div><div class="line">		<span class="keyword">var</span> status = <span class="string">'11'</span>;</div><div class="line">		<span class="keyword">var</span> ele = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">		<span class="keyword">var</span> currentY = e.touches[<span class="number">0</span>].clientY;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (ele.scrollTop === <span class="number">0</span>) &#123;</div><div class="line">			<span class="comment">// 如果内容小于容器则同时禁止上下滚动</span></div><div class="line">			status = ele.offsetHeight &gt;= ele.scrollHeight ? <span class="string">'00'</span> : <span class="string">'01'</span>;</div><div class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (ele.scrollTop + ele.offsetHeight &gt;= ele.scrollHeight) &#123;</div><div class="line">			<span class="comment">// 已经滚到底部了只能向上滚动</span></div><div class="line">			status = <span class="string">'10'</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (status != <span class="string">'11'</span>) &#123;</div><div class="line">			<span class="comment">// 判断当前的滚动方向</span></div><div class="line">			<span class="keyword">var</span> direction = currentY - startY &gt; <span class="number">0</span> ? <span class="string">'10'</span> : <span class="string">'01'</span>;</div><div class="line">			<span class="comment">// 操作方向和当前允许状态求与运算，运算结果为0，就说明不允许该方向滚动，则禁止默认事件，阻止滚动</span></div><div class="line">			<span class="keyword">if</span> (!(<span class="built_in">parseInt</span>(status, <span class="number">2</span>) &amp; <span class="built_in">parseInt</span>(direction, <span class="number">2</span>))) &#123;</div><div class="line">				stopEvent(e);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">	<span class="comment">//==================================</span></div><div class="line"></div><div class="line"></div><div class="line">	<span class="keyword">return</span> &#123;</div><div class="line">		<span class="attr">gtIOS</span>: gtIOS,</div><div class="line">		<span class="attr">isSupportCss</span>: isSupportCss</div><div class="line">	&#125;;</div><div class="line">&#125;());</div><div class="line"></div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = Tools;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="发布应用">发布应用</h4><pre><code><span class="bullet">* </span>npm发布
<span class="bullet">* </span>通过require的方式引用，直接使用
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h4 id="环境要求">环境要求</h4><ul>
<li>nodejs</li>
</ul>
<h4 id="基本文件结构">基本文件结构</h4><ul>
<li>package.json <ul>
<li>使用npm init生成</li>
<li>安装依赖模块使用 npm install 模块名</li>
</ul>
</li>
<li>一个主文件 index.js</li>
<li>一个lib文件夹<ul>
<li>存放源文件]]>
    
    </summary>
    
      <category term="nodejs" scheme="http://www.xuerlove.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[移动端布局]]></title>
    <link href="http://www.xuerlove.com/2016/04/14/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B8%83%E5%B1%80/"/>
    <id>http://www.xuerlove.com/2016/04/14/移动端布局/</id>
    <published>2016-04-14T02:39:45.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>黏性布局 POSITION:STICKY（通过判断支持该属性的浏览器使用该布局） – <a href="http://hao.jser.com/archive/7970/" target="_blank" rel="external">http://hao.jser.com/archive/7970/</a></p>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.sticky &#123;</div><div class="line">    <span class="attr">position</span>: -webkit-sticky;</div><div class="line">    position: sticky;</div><div class="line">    top: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">.fixed &#123;</div><div class="line">    <span class="attr">position</span>: fixed;</div><div class="line">    top: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Web移动端Fixed布局的解决方案  – <a href="http://efe.baidu.com/blog/mobile-fixed-layout/" target="_blank" rel="external">http://efe.baidu.com/blog/mobile-fixed-layout/</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li><p>黏性布局 POSITION:STICKY（通过判断支持该属性的浏览器使用该布局） – <a href="http://hao.jser.com/archive/7970/">http://hao.jser.com/archive/7970/</a></p>]]>
    
    </summary>
    
      <category term="web" scheme="http://www.xuerlove.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[动态脚本]]></title>
    <link href="http://www.xuerlove.com/2015/11/25/%E5%8A%A8%E6%80%81%E8%84%9A%E6%9C%AC/"/>
    <id>http://www.xuerlove.com/2015/11/25/动态脚本/</id>
    <published>2015-11-25T07:03:01.000Z</published>
    <updated>2017-02-17T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<h4 id="动态加载js">动态加载js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadScript</span>(<span class="params">data,type</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</div><div class="line">	script.type = <span class="string">"text/javascript"</span>;</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</div><div class="line">			script.appendChild(<span class="built_in">document</span>.createTextNode(data));</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			script.src = data;</div><div class="line">		&#125;</div><div class="line">	&#125;<span class="keyword">catch</span>(ex)&#123;</div><div class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</div><div class="line">			script.text = code</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			script.src = data;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">document</span>.body.appendChild(script);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="动态样式">动态样式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadStyle</span>(<span class="params">data,type</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> style = <span class="built_in">document</span>.createElement(<span class="string">"style"</span>);</div><div class="line">	style.type = <span class="string">"text/css"</span>;</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</div><div class="line">			style.appendChild(<span class="built_in">document</span>.createTextNode(data));</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			style.href = data;</div><div class="line">		&#125;</div><div class="line">	&#125;<span class="keyword">catch</span>(ex)&#123;</div><div class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</div><div class="line">			style.styleSheet.cssText = css;</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			style.href = data;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">var</span> head = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>];</div><div class="line">	head.appendChild(style);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h4 id="动态加载js">动态加载js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadScript</span>(<span class="params">data,type</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</div><div class="line">	script.type = <span class="string">"text/javascript"</span>;</div><div class="line">	<span class="keyword">try</span>&#123;</div><div class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</div><div class="line">			script.appendChild(<span class="built_in">document</span>.createTextNode(data));</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			script.src = data;</div><div class="line">		&#125;</div><div class="line">	&#125;<span class="keyword">catch</span>(ex)&#123;</div><div class="line">		<span class="keyword">if</span>(type === <span class="number">1</span>)&#123;</div><div class="line">			script.text = code</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			script.src = data;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">document</span>.body.appendChild(script);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://www.xuerlove.com/tags/javascript/"/>
    
  </entry>
  
</feed>
